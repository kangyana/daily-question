import{_ as p,r as o,o as c,c as i,b as n,d as t,e as s,a as e}from"./app.2a439a8a.js";const l={},u=n("h1",{id:"\u3010q083\u3011react-redux-connect-\u5B9E\u73B0\u539F\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q083\u3011react-redux-connect-\u5B9E\u73B0\u539F\u7406","aria-hidden":"true"},"#"),s(" \u3010Q083\u3011react-redux connect \u5B9E\u73B0\u539F\u7406")],-1),r={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"Issue",-1),k=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),v={href:"https://github.com/kangyana/daily-question/issues/83",target:"_blank",rel:"noopener noreferrer"},m=s("Issue 83"),b={class:"custom-container tip"},f=n("p",{class:"custom-container-title"},"Author",-1),h=s("\u56DE\u7B54\u8005: "),y={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},w=s("kangyana"),g=e(`<h2 id="_1-connect-\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#_1-connect-\u7684\u4F5C\u7528" aria-hidden="true">#</a> 1. connect \u7684\u4F5C\u7528</h2><p><code>connect</code> \u548C <code>Provider</code> \u5C06 react \u548C redux \u8FDE\u63A5\u8D77\u6765\u3002</p><ul><li><strong>connect</strong>\uFF1A\u7528\u4E8E\u521B\u5EFA\u5BB9\u5668\u7EC4\u4EF6\uFF0C\u53EF\u4EE5\u4F7F\u5BB9\u5668\u7EC4\u4EF6\u8BBF\u95EE\u5230 <code>Provider</code> \u7EC4\u4EF6\u901A\u8FC7 <code>context</code> \u63D0\u4F9B\u7684 <code>store</code>\uFF0C \u5E76\u5C06 <code>mapStateToProps</code> \u548C <code>mapDispatchToProps</code> \u8FD4\u56DE\u7684 <code>state</code> \u548C <code>dispatch</code>\u4F20\u9012\u7ED9UI\u7EC4\u4EF6\u3002</li><li><strong>Provider</strong>\uFF1A\u901A\u8FC7 <code>context</code> \u5411\u5B50\u7EC4\u4EF6\u63D0\u4F9B <code>store</code>\u3002</li></ul><h2 id="_2-connect-\u548C-provider-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-connect-\u548C-provider-\u7684\u4F7F\u7528" aria-hidden="true">#</a> 2. connect \u548C Provider \u7684\u4F7F\u7528</h2><p>\u5168\u5C40\u6CE8\u518C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// App.jsx</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>
<span class="token keyword">import</span> createStore <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>
<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&#39;./reducers&#39;</span>
<span class="token keyword">import</span> Container <span class="token keyword">from</span> <span class="token string">&#39;./Container&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Container <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC4\u4EF6\u5957\u5BB9\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Container.jsx</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> ownProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dispatch<span class="token punctuation">,</span> ownProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),P={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"Author",-1),_=s("\u56DE\u7B54\u8005: "),C={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},S=s("kangyana"),T=e(`<h2 id="_3-provider-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_3-provider-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> 3. Provider \u6E90\u7801\u89E3\u6790</h2><p><code>Provider</code> \u7EC4\u4EF6\u5728 <code>Provider.js</code> \u91CC\u9762\u5B9A\u4E49\uFF0C\u4EC5\u6709\u77ED\u77ED\u51E0\u5341\u884C\u4EE3\u7801\uFF0C\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ReactReduxContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./Context&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Provider</span><span class="token punctuation">(</span><span class="token parameter">_ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> store <span class="token operator">=</span> _ref<span class="token punctuation">.</span>store<span class="token punctuation">,</span> <span class="token comment">// \u83B7\u53D6\u7EC4\u4EF6\u7ED1\u5B9A\u7684store</span>
      context <span class="token operator">=</span> _ref<span class="token punctuation">.</span>context<span class="token punctuation">,</span>
      children <span class="token operator">=</span> _ref<span class="token punctuation">.</span>children<span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5B50\u7EC4\u4EF6</span>
  <span class="token comment">// contextValue\u7684\u503C\u4E3A{store\uFF0C subscription}</span>
  <span class="token keyword">var</span> contextValue <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> subscription <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subscription</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>
    subscription<span class="token punctuation">.</span>onStateChange <span class="token operator">=</span> subscription<span class="token punctuation">.</span>notifyNestedSubs<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">store</span><span class="token operator">:</span> store<span class="token punctuation">,</span>
      <span class="token literal-property property">subscription</span><span class="token operator">:</span> subscription
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>store<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> previousState <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>store<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> subscription <span class="token operator">=</span> contextValue<span class="token punctuation">.</span>subscription<span class="token punctuation">;</span>
    subscription<span class="token punctuation">.</span><span class="token function">trySubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>previousState <span class="token operator">!==</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subscription<span class="token punctuation">.</span><span class="token function">notifyNestedSubs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subscription<span class="token punctuation">.</span><span class="token function">tryUnsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      subscription<span class="token punctuation">.</span>onStateChange <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>contextValue<span class="token punctuation">,</span> previousState<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679CProvider\u7EC4\u4EF6\u4E0A\u7ED1\u5B9A\u4E86context\u5C31\u662F\u7528\u7ED1\u5B9A\u7684context\uFF0C\u5982\u679C\u6CA1\u6709\u7ED1\u5B9Acontext\uFF0C\u5C31\u4F1A\u81EA\u5DF1\u751F\u6210context</span>
  <span class="token comment">// children\u4E3A\u5D4C\u5957\u5728Provider\u91CC\u5C42\u7684\u5B50\u7EC4\u4EF6</span>
  <span class="token keyword">var</span> Context <span class="token operator">=</span> context <span class="token operator">||</span> ReactReduxContext<span class="token punctuation">;</span>
  <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>Provider<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> contextValue
  <span class="token punctuation">}</span><span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Provider<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u770B\u8FD9\u90E8\u5206\u4EE3\u7801\uFF0C\u5982\u679C <code>Provider</code> \u7EC4\u4EF6\u4E0A\u7ED1\u5B9A\u4E86 <code>context</code> \u5C31\u662F\u7528\u7ED1\u5B9A\u7684 <code>context</code>\uFF0C \u5982\u679C\u6CA1\u6709\u7ED1\u5B9A <code>context</code>\uFF0C\u5C31\u4F1A\u81EA\u5DF1\u751F\u6210 <code>context</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Context <span class="token operator">=</span> context <span class="token operator">||</span> ReactReduxContext<span class="token punctuation">;</span>
<span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>Provider<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> contextValue
<span class="token punctuation">}</span><span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ReactReduxContext</code> \u7684\u751F\u6210\u5728 <code>Context.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">var</span> ReactReduxContext <span class="token operator">=</span>
<span class="token comment">/*#__PURE__*/</span>
React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ReactReduxContext<span class="token punctuation">.</span>displayName <span class="token operator">=</span> <span class="token string">&#39;ReactRedux&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ReactReduxContext<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E86 <code>context</code> \u5C31\u53EF\u4EE5\u5411\u5B50\u7EC4\u4EF6\u63D0\u4F9B <code>store</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Container <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span>

<span class="token comment">// \u7B49\u4EF7\u4E8E</span>

<span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Context<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> contextValue<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Container <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Context<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5F00 react devtool \u53EF\u4EE5\u770B\u5230\u6700\u5916\u5C42\u7EC4\u4EF6\u4E3A <code>&lt;Provider&gt;</code>\uFF0C\u91CC\u5C42\u7684\u5B50\u7EC4\u4EF6\u7531 <code>&lt;ReactRedux.Provider&gt;</code> \u7EC4\u4EF6\u5305\u88F9</p><p><img src="https://image-static.segmentfault.com/185/773/1857735591-5eb36548abe49_fix732" alt="Alt"></p>`,11),R={class:"custom-container tip"},j=n("p",{class:"custom-container-title"},"Author",-1),F=s("\u56DE\u7B54\u8005: "),D={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},O=s("kangyana"),E=e(`<h2 id="_4-connect-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_4-connect-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> 4. connect \u6E90\u7801\u89E3\u6790</h2><p><code>connect</code> \u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u731C\u60F3\u5230 <code>connect(mapStateToProps, mapDispatchToProps)</code> \u8FD9\u90E8\u5206\u5C06\u8FD4\u56DE\u4E00\u4E2A\u9AD8\u9636\u7EC4\u4EF6\uFF0C \u8FD9\u4E2A\u9AD8\u9636\u7EC4\u4EF6\u7684\u4F5C\u7528\u5C31\u662F\u5C06 <code>mapStateToProps</code> \u8FD4\u56DE\u7684 <code>state</code> \u548C <code>mapDispatchToProps</code> \u8FD4\u56DE\u7684 <code>dispatch</code> \u901A\u8FC7 <code>props</code> \u4F20\u9012\u7ED9<code>Demo</code>\u3002 \u6211\u4EEC\u901A\u8FC7\u6E90\u7801\u6765\u9A8C\u8BC1\u4E00\u4E0B\u731C\u60F3\u662F\u5426\u6B63\u786E\u3002</p><p><code>connect</code> \u51FD\u6570\u5728 <code>connect.js</code> \u4E2D\u5B9E\u73B0\uFF0C\u51FD\u6570\u5927\u6982\u5C31\u662F\u5982\u4E0B\u6837\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createConnect</span><span class="token punctuation">(</span><span class="token parameter">_temp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// coding...</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token parameter">mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">,</span> mergeProps<span class="token punctuation">,</span> _ref2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// coding...</span>
    <span class="token keyword">return</span> <span class="token function">connectHOC</span><span class="token punctuation">(</span>selectorFactory<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>connectHOC</code> \u51FD\u6570\u6267\u884C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A <strong>\u9AD8\u9636\u7EC4\u4EF6</strong> <code>wrapWithConnect(WrappedComponent)</code>\uFF0C \u5B83\u5728 <code>connectAdvanced.js</code> \u4E2D\u5B9E\u73B0\uFF0C<code>connectAdvanced</code> \u51FD\u6570\u5C31\u662F <code>connectHOC</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">connectAdvanced</span><span class="token punctuation">(</span><span class="token parameter">selectorFactory<span class="token punctuation">,</span> _ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// coding...</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrapWithConnect</span><span class="token punctuation">(</span><span class="token parameter">WrappedComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// coding...</span>
    <span class="token keyword">function</span> <span class="token function">createChildSelector</span><span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">selectorFactory</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>dispatch<span class="token punctuation">,</span> selectorFactoryOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// coding...</span>
    <span class="token keyword">function</span> <span class="token function">ConnectFunction</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// coding...</span>
      
      <span class="token comment">// \u83B7\u53D6context\u5BF9\u8C61</span>
      <span class="token keyword">var</span> ContextToUse <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> propsContext <span class="token operator">&amp;&amp;</span> propsContext<span class="token punctuation">.</span>Consumer <span class="token operator">&amp;&amp;</span> <span class="token function">isContextConsumer</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>propsContext<span class="token punctuation">.</span>Consumer<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> propsContext <span class="token operator">:</span> Context<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>propsContext<span class="token punctuation">,</span> Context<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
      
      <span class="token comment">// \u83B7\u53D6Context.Provider\u7ED1\u5B9A\u7684value\u503C{store\uFF0Csubscription}</span>
      <span class="token keyword">var</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>ContextToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token comment">// \u83B7\u53D6store</span>
      <span class="token keyword">var</span> store <span class="token operator">=</span> didStoreComeFromProps <span class="token operator">?</span> props<span class="token punctuation">.</span>store <span class="token operator">:</span> contextValue<span class="token punctuation">.</span>store<span class="token punctuation">;</span>
      <span class="token comment">// childPropsSelector\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF08\uFF09\uFF0C\u63A5\u53D7store.getState()\u548Cprops</span>
      <span class="token keyword">var</span> childPropsSelector <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">createChildSelector</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>store<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token comment">// \u8FD9\u91CC\u6267\u884CchildPropsSelector\uFF0C\u5C06store.getState()\u548Cprops\u4F20\u9012\u8FDB\u53BB\uFF0C\u7136\u540EmapStateToProps\u63A5\u53D7\u5230state\u548Cprops\uFF0C\u81F3\u4E8Edispatch\uFF0C\u5728\u6267\u884CselectorFactory(store.dispatch, selectorFactoryOptions);\u5C31\u4F20\u9012\u8FDB\u53BB\u4E86\u3002</span>
      <span class="token keyword">var</span> actualChildProps <span class="token operator">=</span> <span class="token function">usePureOnlyMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childPropsFromStoreUpdate<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> wrapperProps <span class="token operator">===</span> lastWrapperProps<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> childPropsFromStoreUpdate<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">childPropsSelector</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> wrapperProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>store<span class="token punctuation">,</span> previousStateUpdateResult<span class="token punctuation">,</span> wrapperProps<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token comment">// actualChildProps\u5F97\u5230\u7684\u5C31\u662FmapStateToProps\u8FD4\u56DE\u7684state\uFF0C\u628A\u5B83\u653E\u5728props\u4E2D\u4F20\u9012\u7ED9UI\u7EC4\u4EF6</span>
      <span class="token keyword">var</span> renderedWrappedComponent <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>WrappedComponent<span class="token punctuation">,</span> <span class="token function">_extends</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> actualChildProps<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">ref</span><span class="token operator">:</span> forwardedRef
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>forwardedRef<span class="token punctuation">,</span> WrappedComponent<span class="token punctuation">,</span> actualChildProps<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      
      <span class="token keyword">var</span> renderedChild <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// shouldHandleStateChanges\u63A7\u5236\u662F\u5426\u5E94\u8BE5\u8BA2\u9605redux store\u4E2D\u7684state\u53D8\u5316\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldHandleStateChanges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8BA2\u9605redux store\u4E2D\u7684state\u53D8\u5316\uFF0C\u8FD4\u56DEContextToUse.Provider\u5D4C\u5957\u7EC4\u4EF6</span>
          <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>ContextToUse<span class="token punctuation">.</span>Provider<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> overriddenContextValue
          <span class="token punctuation">}</span><span class="token punctuation">,</span> renderedWrappedComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E0D\u9700\u8981\u8BA2\u9605redux store\u4E2D\u7684state\u53D8\u5316\u5C31\u76F4\u63A5\u8FD4\u56DEUI\u7EC4\u4EF6</span>
        <span class="token keyword">return</span> renderedWrappedComponent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>ContextToUse<span class="token punctuation">,</span> renderedWrappedComponent<span class="token punctuation">,</span> overriddenContextValue<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> renderedChild<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// React.memo\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u7EAF\u51FD\u6570\u7EC4\u4EF6\uFF0C\u8DDFPureComponent\u4E00\u6837\uFF0C\u4F46React.memo\u4F5C\u7528\u4E8Efunction component\uFF0C\u800CPureComponent\u4F5C\u7528\u4E8Eclass component\u3002\u4F7F\u7528\u7EAF\u51FD\u6570\u7EC4\u4EF6\u6700\u5927\u7684\u4F5C\u7528\u5C31\u662F\u53EA\u6709props\u53D8\u5316\u65F6\u7EC4\u4EF6\u624D\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u53EF\u4EE5\u63D0\u9AD8\u6E32\u67D3\u6027\u80FD\u3002</span>
    <span class="token keyword">var</span> Connect <span class="token operator">=</span> pure <span class="token operator">?</span> React<span class="token punctuation">.</span><span class="token function">memo</span><span class="token punctuation">(</span>ConnectFunction<span class="token punctuation">)</span> <span class="token operator">:</span> ConnectFunction<span class="token punctuation">;</span>
    Connect<span class="token punctuation">.</span>WrappedComponent <span class="token operator">=</span> WrappedComponent<span class="token punctuation">;</span>
    Connect<span class="token punctuation">.</span>displayName <span class="token operator">=</span> displayName<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>forwardRef<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> forwarded <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">forwardConnectRef</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>Connect<span class="token punctuation">,</span> <span class="token function">_extends</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> props<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">forwardedRef</span><span class="token operator">:</span> ref
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      forwarded<span class="token punctuation">.</span>displayName <span class="token operator">=</span> displayName<span class="token punctuation">;</span>
      forwarded<span class="token punctuation">.</span>WrappedComponent <span class="token operator">=</span> WrappedComponent<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">hoistStatics</span><span class="token punctuation">(</span>forwarded<span class="token punctuation">,</span> WrappedComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// hoistStatics\u662Fhoist-non-react-statics\u5305\u7684\u5BFC\u51FA\uFF0C\u7528\u4E8E\u5C06\u7EC4\u4EF6\u4E2D\u975Ereact\u81EA\u5E26\u7684\u9759\u6001\u65B9\u6CD5\u590D\u5236\u5230\u53E6\u4E00\u4E2A\u7EC4\u4EF6\u3002\u8BE5\u5305\u4E00\u822C\u7528\u4E8E\u5B9A\u4E49HOC\u4E2D\uFF0C\u56E0\u4E3A\u5F53\u4F60\u7ED9\u4E00\u4E2A\u7EC4\u4EF6\u6DFB\u52A0\u4E00\u4E2AHOC\u65F6\uFF0C\u539F\u6765\u7684\u7EC4\u4EF6\u4F1A\u88AB\u4E00\u4E2Acontainer\u7684\u7EC4\u4EF6\u5305\u88F9\uFF0C\u8FD9\u610F\u5473\u7740\u65B0\u7684\u7EC4\u4EF6\u4E0D\u4F1A\u6709\u539F\u6765\u7EC4\u4EF6\u4EFB\u4F55\u9759\u6001\u65B9\u6CD5\u3002\u53C2\u8003\uFF1Ahttps://zhuanlan.zhihu.com/p/36178509</span>
    <span class="token keyword">return</span> <span class="token function">hoistStatics</span><span class="token punctuation">(</span>Connect<span class="token punctuation">,</span> WrappedComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>connectHOC(selectorFactory, options)</code> \u4E2D <code>selectorFactory</code> \u51FD\u6570\u4F20\u9012\u5230 <code>connectAdvanced(selectorFactory, _ref)</code> \u4E2D\uFF0C \u5728 <code>ConnectFunction(props)</code> \u51FD\u6570\u7EC4\u4EF6\u4E2D\u8C03\u7528 <code>createChildSelector(store)</code>\uFF0C \u7136\u540E\u8C03\u7528 <code>selectorFactory(store.dispatch, selectorFactoryOptions)</code>\u3002 <code>selectorFactory</code> \u51FD\u6570\u662F <code>connect</code> \u4E2D\u7684\u6838\u5FC3API\uFF0C\u5B83\u7684\u5B9E\u73B0\u5728 <code>selectorFactory.js</code> \u6587\u4EF6\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">finalPropsSelectorFactory</span><span class="token punctuation">(</span><span class="token parameter">dispatch<span class="token punctuation">,</span> _ref2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> initMapStateToProps <span class="token operator">=</span> _ref2<span class="token punctuation">.</span>initMapStateToProps<span class="token punctuation">,</span>
      initMapDispatchToProps <span class="token operator">=</span> _ref2<span class="token punctuation">.</span>initMapDispatchToProps<span class="token punctuation">,</span>
      initMergeProps <span class="token operator">=</span> _ref2<span class="token punctuation">.</span>initMergeProps<span class="token punctuation">,</span>
      options <span class="token operator">=</span> <span class="token function">_objectWithoutPropertiesLoose</span><span class="token punctuation">(</span>_ref2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;initMapStateToProps&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;initMapDispatchToProps&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;initMergeProps&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> mapStateToProps <span class="token operator">=</span> <span class="token function">initMapStateToProps</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> mapDispatchToProps <span class="token operator">=</span> <span class="token function">initMapDispatchToProps</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> mergeProps <span class="token operator">=</span> <span class="token function">initMergeProps</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">verifySubselectors</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">,</span> mergeProps<span class="token punctuation">,</span> options<span class="token punctuation">.</span>displayName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> selectorFactory <span class="token operator">=</span> options<span class="token punctuation">.</span>pure <span class="token operator">?</span> pureFinalPropsSelectorFactory <span class="token operator">:</span> impureFinalPropsSelectorFactory<span class="token punctuation">;</span>
  <span class="token comment">// </span>
  <span class="token keyword">return</span> <span class="token function">selectorFactory</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">,</span> mergeProps<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pureFinalPropsSelectorFactory</code> \u51FD\u6570\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pureFinalPropsSelectorFactory</span><span class="token punctuation">(</span><span class="token parameter">mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">,</span> mergeProps<span class="token punctuation">,</span> dispatch<span class="token punctuation">,</span> _ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> areStatesEqual <span class="token operator">=</span> _ref<span class="token punctuation">.</span>areStatesEqual<span class="token punctuation">,</span>
      areOwnPropsEqual <span class="token operator">=</span> _ref<span class="token punctuation">.</span>areOwnPropsEqual<span class="token punctuation">,</span>
      areStatePropsEqual <span class="token operator">=</span> _ref<span class="token punctuation">.</span>areStatePropsEqual<span class="token punctuation">;</span>
  <span class="token keyword">var</span> hasRunAtLeastOnce <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> state<span class="token punctuation">;</span>
  <span class="token keyword">var</span> ownProps<span class="token punctuation">;</span>
  <span class="token keyword">var</span> stateProps<span class="token punctuation">;</span>
  <span class="token keyword">var</span> dispatchProps<span class="token punctuation">;</span>
  <span class="token keyword">var</span> mergedProps<span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">handleFirstCall</span><span class="token punctuation">(</span><span class="token parameter">firstState<span class="token punctuation">,</span> firstOwnProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> firstState<span class="token punctuation">;</span>
    ownProps <span class="token operator">=</span> firstOwnProps<span class="token punctuation">;</span>
    stateProps <span class="token operator">=</span> <span class="token function">mapStateToProps</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> ownProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dispatchProps <span class="token operator">=</span> <span class="token function">mapDispatchToProps</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> ownProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mergedProps <span class="token operator">=</span> <span class="token function">mergeProps</span><span class="token punctuation">(</span>stateProps<span class="token punctuation">,</span> dispatchProps<span class="token punctuation">,</span> ownProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hasRunAtLeastOnce <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> mergedProps<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">handleNewPropsAndNewState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">handleNewProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">handleNewState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">handleSubsequentCalls</span><span class="token punctuation">(</span><span class="token parameter">nextState<span class="token punctuation">,</span> nextOwnProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// coding...</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">pureFinalPropsSelector</span><span class="token punctuation">(</span><span class="token parameter">nextState<span class="token punctuation">,</span> nextOwnProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> hasRunAtLeastOnce <span class="token operator">?</span> <span class="token function">handleSubsequentCalls</span><span class="token punctuation">(</span>nextState<span class="token punctuation">,</span> nextOwnProps<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">handleFirstCall</span><span class="token punctuation">(</span>nextState<span class="token punctuation">,</span> nextOwnProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectorFactory</code> \u7684\u4F5C\u7528\u5C31\u662F\u5C06\u8FDE\u63A5 <code>store</code> \u7684 <code>ConnectFunction</code> \u7EC4\u4EF6\u4E2D\u83B7\u53D6\u7684 <code>state</code>\u3001<code>props</code> \u4F20\u9012\u7ED9 <code>MapStateToProps</code> \u548C\u5C06\u83B7\u53D6\u7684 <code>dispatch</code> \u4F20\u9012\u7ED9 <code>mapDispatchToProps</code>\u3002 \u7136\u540E <code>MapStateToProps</code> \u548C <code>mapDispatchToProps</code> \u7684\u8FD4\u56DE\u503C\u4F1A\u5728 <code>ConnectFunction</code> \u7EC4\u4EF6\u4E2D\u4F7F\u7528 <code>props</code> \u4F20\u9012\u7ED9UI\u7EC4\u4EF6\u3002</p><p><code>wrapWithConnect(WrappedComponent)</code> \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u3001\u8FDE\u63A5\u5230 <code>store</code> \u7684 <code>ConnectFunction(props)</code> \u51FD\u6570\u7EC4\u4EF6\uFF0C \u8BE5\u7EC4\u4EF6\u5185\u90E8\u4F1A\u6839\u636E <code>shouldHandleStateChanges</code> \u5B57\u6BB5\u5224\u65AD\u662F\u5426\u9700\u8981\u76D1\u542C <code>redux store</code> \u4E2D <code>state</code> \u7684\u53D8\u5316\uFF0C \u5982\u679C\u9700\u8981\u5C31\u8FD4\u56DE <code>ContextToUse.Provider</code> \u5305\u88F9UI\u7EC4\u4EF6\u7684\u5B50\u7EC4\u4EF6\u3002 <code>ContextToUse.Provider</code> \u4E3A\u7EC4\u7EC4\u4EF6\u63D0\u4F9B\u91CD\u65B0\u6784\u9020\u7684 <code>overriddenContextValue</code>\uFF0C\u5982\u679C\u4E0D\u9700\u8981\u76D1\u542C <code>redux store</code> \u4E2D <code>state</code> \u7684\u53D8\u5316\uFF0C\u5C31\u8FD4\u56DEUI\u7EC4\u4EF6\u4E3A\u5B50\u7EC4\u4EF6\u3002 \u5C31\u5982\u7B2C\u4E00\u90E8\u5206\u5185\u5BB9\u4F8B\u5B50\uFF0C<code>Brother</code> \u7EC4\u4EF6\u4E0D\u9700\u8981 <code>state</code>\uFF0C<code>Sister</code> \u7EC4\u4EF6\u9700\u8981 <code>state</code>\uFF0C \u90A3\u4E48 <code>Sister</code> \u7EC4\u4EF6\u5C31\u4F1A\u7528 <code>ContextToUse.Provider</code> \u5305\u88F9\u7740\u3002\u6574\u4E2A\u7EC4\u4EF6\u67B6\u6784\u5C31\u53D8\u6210\u5982\u4E0B\u6837\u5B50\uFF1A</p><p><img src="https://image-static.segmentfault.com/378/550/3785504273-5eb3706261029_fix732" alt="Alt"></p>`,15),M={class:"custom-container tip"},N=n("p",{class:"custom-container-title"},"Author",-1),W=s("\u56DE\u7B54\u8005: "),U={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},A=s("kangyana"),V=e('<h2 id="_5-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_5-\u603B\u7ED3" aria-hidden="true">#</a> 5. \u603B\u7ED3</h2><p><code>connect</code> \u7684\u4F5C\u7528\u662F\u8FDE\u63A5 React \u7EC4\u4EF6\u4E0E <code>Redux store</code>\uFF0C\u5B83\u5305\u5728\u6211\u4EEC\u7684\u5BB9\u5668\u7EC4\u4EF6\u7684\u5916\u4E00\u5C42\uFF0C\u5B83\u63A5\u6536\u4E0A\u9762 <code>Provider</code> \u63D0\u4F9B\u7684 <code>store</code> \u91CC\u9762\u7684 <code>state</code> \u548C <code>dispatch</code>\uFF0C\u4F20\u7ED9\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4EE5\u5C5E\u6027\u5F62\u5F0F\u4F20\u7ED9\u6211\u4EEC\u7684\u5BB9\u5668\u7EC4\u4EF6\u3002</p><p>\u5B83\u5171\u6709\u56DB\u4E2A\u53C2\u6570\uFF1A</p><ul><li>mapStateToProps</li><li>mapDispatchToProps</li><li>mergeProps</li><li>options</li></ul><p><code>mapStateToProps</code> \u7684\u4F5C\u7528\u662F\u5C06 <code>store</code> \u91CC\u7684 <code>state</code> \u7ED1\u5B9A\u5230\u6307\u5B9A\u7EC4\u4EF6\u7684 <code>props</code> \u4E2D\u3002 <code>mapDispatchToProps</code> \u7684\u4F5C\u7528\u662F\u5C06 <code>store</code> \u91CC\u7684 <code>action</code> \u7ED1\u5B9A\u5230\u6307\u5B9A\u7EC4\u4EF6\u7684 <code>props</code> \u4E2D\u3002</p>',5);function q(I,H){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("div",r,[d,n("p",null,[k,n("a",v,[m,t(a)])])]),n("div",b,[f,n("p",null,[h,n("a",y,[w,t(a)])])]),g,n("div",P,[x,n("p",null,[_,n("a",C,[S,t(a)])])]),T,n("div",R,[j,n("p",null,[F,n("a",D,[O,t(a)])])]),E,n("div",M,[N,n("p",null,[W,n("a",U,[A,t(a)])])]),V])}const B=p(l,[["render",q],["__file","83.html.vue"]]);export{B as default};

import{_ as e,r as p,o,c,b as n,d as t,e as a,a as i}from"./app.2a439a8a.js";const l={},r=n("h1",{id:"\u3010q039\u3011\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q039\u3011\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D","aria-hidden":"true"},"#"),a(" \u3010Q039\u3011\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D")],-1),u={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"Issue",-1),k=a("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),h={href:"https://github.com/kangyana/daily-question/issues/39",target:"_blank",rel:"noopener noreferrer"},v=a("Issue 39"),b={class:"custom-container tip"},g=n("p",{class:"custom-container-title"},"Author",-1),m=a("\u56DE\u7B54\u8005: "),y={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},f=a("kangyana"),_=i(`<h2 id="_1-\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_1-\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> 1. \u6D45\u62F7\u8D1D</h2><p>\u5982\u679C\u5C5E\u6027\u662F\u57FA\u672C\u7C7B\u578B\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u57FA\u672C\u7C7B\u578B\u7684\u503C\uFF0C \u5982\u679C\u5C5E\u6027\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u5185\u5B58\u5730\u5740\uFF0C\u6240\u4EE5\u5982\u679C\u5176\u4E2D\u4E00\u4E2A\u5BF9\u8C61\u6539\u53D8\u4E86\u8FD9\u4E2A\u5730\u5740\uFF0C\u5C31\u4F1A\u5F71\u54CD\u5230\u53E6\u4E00\u4E2A\u5BF9\u8C61\u3002</p><h3 id="\u8D4B\u503C\u548C\u6D45\u62F7\u8D1D\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u8D4B\u503C\u548C\u6D45\u62F7\u8D1D\u7684\u533A\u522B" aria-hidden="true">#</a> \u8D4B\u503C\u548C\u6D45\u62F7\u8D1D\u7684\u533A\u522B</h3><p>\u5BF9\u539F\u59CB\u6570\u636E\u7684\u5F71\u54CD\uFF1A</p><p>| \u662F\u5426\u6307\u5411\u540C\u4E00\u5BF9\u8C61 | \u6539\u53D8\u57FA\u672C\u6570\u636E\u7C7B\u578B | \u6539\u53D8\u5F15\u7528\u6570\u636E\u7C7B\u578B -- | -- | -- | -- \u8D4B\u503C | \u221A | \u221A | \u221A \u6D45\u62F7\u8D1D | \xD7 | \xD7 | \u221A</p><h2 id="_2-\u6D45\u62F7\u8D1D\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u6D45\u62F7\u8D1D\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 2. \u6D45\u62F7\u8D1D\u7684\u5B9E\u73B0</h2><h3 id="\u5C55\u5F00\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5C55\u5F00\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5C55\u5F00\u8FD0\u7B97\u7B26...</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj1<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="array-prototype-concat" tabindex="-1"><a class="header-anchor" href="#array-prototype-concat" aria-hidden="true">#</a> Array.prototype.concat()</h3><p>\u6B64\u65B9\u6CD5\u53EA\u5BF9\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="array-prototype-slice" tabindex="-1"><a class="header-anchor" href="#array-prototype-slice" aria-hidden="true">#</a> Array.prototype.slice()</h3><p>\u6B64\u65B9\u6CD5\u53EA\u5BF9\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-\u6DF1\u62F7\u8D1D\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-\u6DF1\u62F7\u8D1D\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 3. \u6DF1\u62F7\u8D1D\u7684\u5B9E\u73B0</h2><p>\u6DF1\u62F7\u8D1D\u662F\u5C06\u4E00\u4E2A\u5BF9\u8C61\u4ECE\u5185\u5B58\u4E2D\u5B8C\u6574\u7684\u62F7\u8D1D\u4E00\u4EFD\u51FA\u6765\uFF0C\u4ECE\u5806\u5185\u5B58\u4E2D\u5F00\u8F9F\u4E00\u4E2A\u65B0\u7684\u533A\u57DF\u5B58\u653E\u65B0\u5BF9\u8C61\uFF0C\u4E14\u4FEE\u6539\u65B0\u5BF9\u8C61\u4E0D\u4F1A\u5F71\u54CD\u539F\u5BF9\u8C61\u3002</p><h3 id="json-parse-json-stringify" tabindex="-1"><a class="header-anchor" href="#json-parse-json-stringify" aria-hidden="true">#</a> JSON.parse(JSON.stringify())</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u624B\u5199\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u9012\u5F52" aria-hidden="true">#</a> \u624B\u5199\u9012\u5F52</h3><p>\u9012\u5F52\u6548\u679C\uFF1A\u904D\u5386\u5BF9\u8C61\u3001\u6570\u7EC4\u76F4\u5230\u91CC\u8FB9\u90FD\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u7136\u540E\u518D\u53BB\u590D\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u68C0\u6D4B\u6570\u636E\u7C7B\u578B\u7684\u529F\u80FD\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">checkedType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[object (\\w+)\\]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B9E\u73B0\u6DF1\u62F7\u8D1D\uFF08Object/Array\uFF09</span>
<span class="token keyword">const</span> <span class="token function-variable function">cloneDeep</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result<span class="token punctuation">;</span>
    <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token function">checkedType</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>  <span class="token keyword">return</span> target<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkedType</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token function">checkedType</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function j(x,w){const s=p("ExternalLinkIcon");return o(),c("div",null,[r,n("div",u,[d,n("p",null,[k,n("a",h,[v,t(s)])])]),n("div",b,[g,n("p",null,[m,n("a",y,[f,t(s)])])]),_])}const O=e(l,[["render",j],["__file","39.html.vue"]]);export{O as default};

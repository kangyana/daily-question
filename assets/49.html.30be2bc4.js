import{_ as t,r as e,o as p,c,b as n,d as o,e as s,a as l}from"./app.2a439a8a.js";const i={},u=n("h1",{id:"\u3010q049\u3011symbol",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q049\u3011symbol","aria-hidden":"true"},"#"),s(" \u3010Q049\u3011symbol")],-1),r={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"Issue",-1),k=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),m={href:"https://github.com/kangyana/daily-question/issues/49",target:"_blank",rel:"noopener noreferrer"},b=s("Issue 49"),y={class:"custom-container tip"},v=n("p",{class:"custom-container-title"},"Author",-1),h=s("\u56DE\u7B54\u8005: "),f={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},g=s("kangyana"),_=l(`<h2 id="_1-symbol" tabindex="-1"><a class="header-anchor" href="#_1-symbol" aria-hidden="true">#</a> 1. Symbol</h2><p><code>symbol</code> \u662F\u4E00\u79CD\u57FA\u672C\u6570\u636E\u7C7B\u578B\u3002 <code>Symbol()</code> \u51FD\u6570\u4F1A\u8FD4\u56DE symbol \u7C7B\u578B\u7684\u503C\uFF0C\u8BE5\u7C7B\u578B\u5177\u6709\u9759\u6001\u5C5E\u6027\u548C\u9759\u6001\u65B9\u6CD5\u3002 \u5B83\u7684\u9759\u6001\u5C5E\u6027\u4F1A\u66B4\u9732\u51E0\u4E2A\u5185\u5EFA\u7684\u6210\u5458\u5BF9\u8C61\uFF1B\u5B83\u7684\u9759\u6001\u65B9\u6CD5\u4F1A\u66B4\u9732\u5168\u5C40\u7684 symbol \u6CE8\u518C\uFF0C\u4E14\u7C7B\u4F3C\u4E8E\u5185\u5EFA\u5BF9\u8C61\u7C7B\uFF0C\u4F46\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u6765\u8BF4\u5B83\u5E76\u4E0D\u5B8C\u6574\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u652F\u6301\u8BED\u6CD5\uFF1A<code>new Symbol()</code>\u3002</p><p>\u6BCF\u4E2A\u4ECE <code>Symbol()</code> \u8FD4\u56DE\u7684 symbol \u503C\u90FD\u662F\u552F\u4E00\u7684\u3002\u4E00\u4E2A symbol \u503C\u80FD\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684\u6807\u8BC6\u7B26\uFF1B\u8FD9\u662F\u8BE5\u6570\u636E\u7C7B\u578B\u4EC5\u6709\u7684\u76EE\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> sym3 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> sym4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym2 <span class="token operator">===</span> sym3<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-symbol\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-symbol\u7528\u6CD5" aria-hidden="true">#</a> 2. Symbol\u7528\u6CD5</h2><h3 id="\u5BF9-symbol-\u4F7F\u7528-typeof-\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5BF9-symbol-\u4F7F\u7528-typeof-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5BF9 symbol \u4F7F\u7528 typeof \u8FD0\u7B97\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;symbol&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;symbol&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">)</span> <span class="token comment">// &#39;symbol&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#symbol-\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> Symbol \u7C7B\u578B\u8F6C\u6362</h3><p>\u5F53\u4F7F\u7528 symbol \u503C\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u65F6\u9700\u8981\u6CE8\u610F\u4E00\u4E9B\u4E8B\u60C5\uFF1A</p><ul><li>\u5C1D\u8BD5\u5C06\u4E00\u4E2A symbol \u503C\u8F6C\u6362\u4E3A\u4E00\u4E2A number \u503C\u65F6\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2A TypeError</li><li>\u4F7F\u7528\u5BBD\u677E\u76F8\u7B49\u65F6\uFF0CObject(sym) == sym // true.</li><li>\u8FD9\u4F1A\u963B\u6B62\u4F60\u4ECE\u4E00\u4E2A symbol \u503C\u9690\u5F0F\u5730\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 string \u7C7B\u578B\u7684\u5C5E\u6027\u540D\u3002\u4F8B\u5982\uFF0CSymbol(&quot;foo&quot;) + &quot;bar&quot; \u5C06\u629B\u51FA\u4E00\u4E2A TypeError</li></ul><h3 id="symbols-\u4E0E-for-in-\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#symbols-\u4E0E-for-in-\u8FED\u4EE3" aria-hidden="true">#</a> Symbols \u4E0E for...in \u8FED\u4EE3</h3><p>Symbols \u5728 <code>for...in</code> \u8FED\u4EE3\u4E2D\u4E0D\u53EF\u679A\u4E3E\u3002 \u53E6\u5916\uFF0C<code>Object.getOwnPropertyNames()</code> \u4E0D\u4F1A\u8FD4\u56DE symbol \u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u4F46\u662F\u4F60\u80FD\u4F7F\u7528 <code>Object.getOwnPropertySymbols()</code> \u5F97\u5230\u5B83\u4EEC\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;c&#39;, &#39;d&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbols-\u4E0E-json-stringify" tabindex="-1"><a class="header-anchor" href="#symbols-\u4E0E-json-stringify" aria-hidden="true">#</a> Symbols \u4E0E JSON.stringify()</h3><p>\u5F53\u4F7F\u7528 JSON.stringify() \u65F6\uFF0C\u4EE5 symbol \u503C\u4F5C\u4E3A\u952E\u7684\u5C5E\u6027\u4F1A\u88AB\u5B8C\u5168\u5FFD\u7565\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;{}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-\u5305\u88C5\u5668\u5BF9\u8C61\u4F5C\u4E3A\u5C5E\u6027\u7684\u952E" tabindex="-1"><a class="header-anchor" href="#symbol-\u5305\u88C5\u5668\u5BF9\u8C61\u4F5C\u4E3A\u5C5E\u6027\u7684\u952E" aria-hidden="true">#</a> Symbol \u5305\u88C5\u5668\u5BF9\u8C61\u4F5C\u4E3A\u5C5E\u6027\u7684\u952E</h3><p>\u5F53\u4E00\u4E2A Symbol \u5305\u88C5\u5668\u5BF9\u8C61\u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u7684\u952E\u65F6\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u5C06\u88AB\u5F3A\u5236\u8F6C\u6362\u4E3A\u5B83\u5305\u88C5\u8FC7\u7684 symbol \u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>sym<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>sym<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment">// 1</span>
obj<span class="token punctuation">[</span><span class="token function">Object</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function j(S,q){const a=e("ExternalLinkIcon");return p(),c("div",null,[u,n("div",r,[d,n("p",null,[k,n("a",m,[b,o(a)])])]),n("div",y,[v,n("p",null,[h,n("a",f,[g,o(a)])])]),_])}const w=t(i,[["render",j],["__file","49.html.vue"]]);export{w as default};

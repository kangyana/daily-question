import{_ as o,r as e,o as c,c as u,b as n,d as t,e as s,a as p}from"./app.2a439a8a.js";const l={},i=n("h1",{id:"\u3010q070\u3011react-hooks-\u4F7F\u7528\u4E2D\u5E38\u89C1\u95EE\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q070\u3011react-hooks-\u4F7F\u7528\u4E2D\u5E38\u89C1\u95EE\u9898","aria-hidden":"true"},"#"),s(" \u3010Q070\u3011React Hooks \u4F7F\u7528\u4E2D\u5E38\u89C1\u95EE\u9898")],-1),r={class:"custom-container tip"},k=n("p",{class:"custom-container-title"},"Issue",-1),d=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),v={href:"https://github.com/kangyana/daily-question/issues/70",target:"_blank",rel:"noopener noreferrer"},b=s("Issue 70"),m={class:"custom-container tip"},g=n("p",{class:"custom-container-title"},"Author",-1),h=s("\u56DE\u7B54\u8005: "),f={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},_=s("kangyana"),y=p(`<h2 id="_1-usestate-\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-usestate-\u95EE\u9898" aria-hidden="true">#</a> 1. useState \u95EE\u9898</h2><h3 id="\u4E0D\u8981\u4F7F\u7528\u65E7\u7684\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u4F7F\u7528\u65E7\u7684\u72B6\u6001" aria-hidden="true">#</a> \u4E0D\u8981\u4F7F\u7528\u65E7\u7684\u72B6\u6001</h3><p>\u5148\u6765\u770B\u4E00\u4E2A\u8BA1\u6570\u5668\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Increaser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Counter<span class="token operator">:</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FDE\u7EED\u5FEB\u901F\u70B9\u51FB <strong>\u52A0\u53F7\u6309\u94AE</strong>\uFF0C\u5F88\u53EF\u80FD <code>count</code> \u6CA1\u6709\u8FBE\u5230\u9884\u671F\u7684\u503C\u3002 \u8FD9\u662F\u56E0\u4E3A <code>setState</code> \u662F\u5F02\u6B65\u7684\uFF0C\u72B6\u6001\u5728\u4E0B\u4E00\u6B21\u6E32\u67D3\u65F6\u624D\u66F4\u65B0\u3002 \u6B64\u65F6\u7684 <code>count</code> \u5C31\u662F\u65E7\u503C\u3002\u6B63\u786E\u7528\u6CD5\u662F <strong>\u51FD\u6570\u5F0F\u66F4\u65B0</strong>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">_count</span> <span class="token operator">=&gt;</span> _count<span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4E0D\u8981\u5728\u4E0D\u9700\u8981\u91CD\u65B0\u6E32\u67D3\u65F6\u4F7F\u7528-usestate" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u5728\u4E0D\u9700\u8981\u91CD\u65B0\u6E32\u67D3\u65F6\u4F7F\u7528-usestate" aria-hidden="true">#</a> \u4E0D\u8981\u5728\u4E0D\u9700\u8981\u91CD\u65B0\u6E32\u67D3\u65F6\u4F7F\u7528 useState</h3><p>\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Counter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token parameter">_count</span> <span class="token operator">=&gt;</span> _count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Counter<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Counter Log<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A <code>counter</code> \u6CA1\u6709\u7528\u5728\u6E32\u67D3\uFF0C\u6240\u4EE5\u70B9\u51FB\u7B2C\u4E00\u4E2A\u6309\u94AE\u4E0D\u4F1A\u89E6\u53D1\u6E32\u67D3\uFF0C<code>setState</code> \u4E5F\u5728\u7B49\u5F85\u66F4\u65B0\u3002 \u6B64\u65F6\u518D\u70B9\u51FB\u7B2C\u4E8C\u4E2A\u6309\u94AE\uFF0C\u6253\u5370\u7684 <code>counter</code> \u4E3A\u65E7\u503C\u3002\u8FD9\u4E0E\u671F\u5F85\u4E0D\u7B26\u3002</p><p>\u89E3\u51B3\u65B9\u6848\u662F\uFF0C\u7528 <code>useRef</code> \u66FF\u4EE3 <code>useState</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  counter<span class="token punctuation">.</span>current<span class="token operator">++</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Counter<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Counter Log<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),C={class:"custom-container tip"},j=n("p",{class:"custom-container-title"},"Author",-1),x=s("\u56DE\u7B54\u8005: "),w={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},S=s("kangyana"),I=p(`<h2 id="_2-useeffect-\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-useeffect-\u95EE\u9898" aria-hidden="true">#</a> 2. useEffect \u95EE\u9898</h2><h3 id="\u4E0D\u8981\u5FD8\u8BB0\u6E05\u7406\u526F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u5FD8\u8BB0\u6E05\u7406\u526F\u4F5C\u7528" aria-hidden="true">#</a> \u4E0D\u8981\u5FD8\u8BB0\u6E05\u7406\u526F\u4F5C\u7528</h3><p>\u6765\u770B\u4E00\u4E2A\u8BA1\u6570\u5668\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">DelayedIncreaser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>increase<span class="token punctuation">,</span> setShouldIncrease<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>increase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">count</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>increase<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setShouldIncrease</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Count<span class="token operator">:</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u70B9\u51FB\u6309\u94AE\u65F6\uFF0C<code>count</code> \u6BCF\u79D2\u4F1A\u589E\u52A01\u3002 \u4F46\u662F\u5F53\u5378\u8F7D\u7EC4\u4EF6\u7684\u65F6\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><p>\u6B63\u786E\u7684\u7528\u6CD5\u662F\u5378\u8F7D\u524D\u6E05\u7406\u5B9A\u65F6\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>increase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">count</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>increase<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E0D\u8981\u4F7F\u7528-ref-\u4F5C\u4E3A-useeffect-\u7684\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u4F7F\u7528-ref-\u4F5C\u4E3A-useeffect-\u7684\u4F9D\u8D56" aria-hidden="true">#</a> \u4E0D\u8981\u4F7F\u7528 ref \u4F5C\u4E3A useEffect \u7684\u4F9D\u8D56</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>current<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">.</span>current<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ref</code> \u7684\u66F4\u65B0\u4E0D\u4F1A\u5F15\u8D77\u7EC4\u4EF6\u7684\u6E32\u67D3\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8C03\u7528 <code>useEffect</code> \u51FD\u6570\u3002</p><h2 id="_3-map\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_3-map\u6570\u636E" aria-hidden="true">#</a> 3. Map\u6570\u636E</h2><p>\u4E0D\u5EFA\u8BAE\u7528 <code>useState</code> \u4FDD\u5B58 <code>Map</code>\uFF0C\u4E5F\u4E0D\u5EFA\u8BAE\u7528 <code>useEffect</code> \u76D1\u542C <code>Map</code>\u3002</p>`,12);function E(L,N){const a=e("ExternalLinkIcon");return c(),u("div",null,[i,n("div",r,[k,n("p",null,[d,n("a",v,[b,t(a)])])]),n("div",m,[g,n("p",null,[h,n("a",f,[_,t(a)])])]),y,n("div",C,[j,n("p",null,[x,n("a",w,[S,t(a)])])]),I])}const V=o(l,[["render",E],["__file","70.html.vue"]]);export{V as default};

import{_ as e,r as o,o as c,c as u,b as n,d as t,e as s,a as p}from"./app.2a439a8a.js";const i={},l=n("h1",{id:"\u3010q026\u3011\u5E38\u89C1\u7684\u6570\u7EC4\u65B9\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q026\u3011\u5E38\u89C1\u7684\u6570\u7EC4\u65B9\u6CD5","aria-hidden":"true"},"#"),s(" \u3010Q026\u3011\u5E38\u89C1\u7684\u6570\u7EC4\u65B9\u6CD5")],-1),r={class:"custom-container tip"},k=n("p",{class:"custom-container-title"},"Issue",-1),d=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),m={href:"https://github.com/kangyana/daily-question/issues/26",target:"_blank",rel:"noopener noreferrer"},v=s("Issue 26"),b={class:"custom-container tip"},h=n("p",{class:"custom-container-title"},"Author",-1),g=s("\u56DE\u7B54\u8005: "),y={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},f=s("kangyana"),q=p(`<h1 id="\u4E00\u3001\u6570\u7EC4\u904D\u5386\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u6570\u7EC4\u904D\u5386\u76F8\u5173" aria-hidden="true">#</a> \u4E00\u3001\u6570\u7EC4\u904D\u5386\u76F8\u5173</h1><h2 id="_1-array-prototype-entries" tabindex="-1"><a class="header-anchor" href="#_1-array-prototype-entries" aria-hidden="true">#</a> 1. Array.prototype.entries()</h2><p><code>entries()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <strong>Array Iterator</strong> \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u5305\u542B\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u7684\u952E/\u503C\u5BF9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iterator1 <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, &quot;a&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, &quot;b&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u4E0E-for-of-\u6784\u6210\u6570\u7EC4\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u4E0E-for-of-\u6784\u6210\u6570\u7EC4\u904D\u5386" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u4E0E <code>for...of</code> \u6784\u6210\u6570\u7EC4\u904D\u5386\uFF1A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> element<span class="token punctuation">]</span> <span class="token keyword">of</span> a<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 0 &#39;a&#39;</span>
<span class="token comment">// 1 &#39;b&#39;</span>
<span class="token comment">// 2 &#39;c&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-array-prototype-every" tabindex="-1"><a class="header-anchor" href="#_2-array-prototype-every" aria-hidden="true">#</a> 2. Array.prototype.every()</h2><p><code>every()</code> \u65B9\u6CD5\u6D4B\u8BD5\u4E00\u4E2A\u6570\u7EC4\u5185\u7684\u6240\u6709\u5143\u7D20\u662F\u5426\u90FD\u80FD\u901A\u8FC7\u67D0\u4E2A\u6307\u5B9A\u51FD\u6570\u7684\u6D4B\u8BD5\u3002\u5B83\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</p><p>\u5907\u6CE8\uFF1A \u82E5\u6536\u5230\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u6B64\u65B9\u6CD5\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\u90FD\u4F1A\u8FD4\u56DE true\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> flag <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5224\u65AD\u6BCF\u4E00\u9879\u90FD\u7B26\u5408\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5224\u65AD\u6BCF\u4E00\u9879\u90FD\u7B26\u5408\u6761\u4EF6" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5224\u65AD\u6BCF\u4E00\u9879\u90FD\u7B26\u5408\u6761\u4EF6</h3><h2 id="_3-array-prototype-filter" tabindex="-1"><a class="header-anchor" href="#_3-array-prototype-filter" aria-hidden="true">#</a> 3. Array.prototype.filter()</h2><p><code>filter()</code> \u65B9\u6CD5\u521B\u5EFA\u7ED9\u5B9A\u6570\u7EC4\u4E00\u90E8\u5206\u7684 <code>\u6D45\u62F7\u8D1D</code>\uFF0C\u5176\u5305\u542B\u901A\u8FC7\u6240\u63D0\u4F9B\u51FD\u6570\u5B9E\u73B0\u7684\u6D4B\u8BD5\u7684\u6240\u6709\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;spray&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;elite&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;exuberant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;destruction&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;present&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">word</span> <span class="token operator">=&gt;</span> word<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u7B5B\u9009\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u7B5B\u9009\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u7B5B\u9009\u6570\u7EC4</h3><h2 id="_4-array-prototype-flat" tabindex="-1"><a class="header-anchor" href="#_4-array-prototype-flat" aria-hidden="true">#</a> 4. Array.prototype.flat()</h2><p><code>flat()</code> \u65B9\u6CD5\u4F1A\u6309\u7167\u4E00\u4E2A\u53EF\u6307\u5B9A\u7684\u6DF1\u5EA6\u9012\u5F52\u904D\u5386\u6570\u7EC4\uFF0C\u5E76\u5C06\u6240\u6709\u5143\u7D20\u4E0E\u904D\u5386\u5230\u7684\u5B50\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5408\u5E76\u4E3A\u4E00\u4E2A\u65B0\u6570\u7EC4\u8FD4\u56DE\u3002</p><p>\u6839\u636E\u53C2\u6570\u63D0\u53D6\u5D4C\u5957\u6570\u7EC4\u7684\u7ED3\u6784\u6DF1\u5EA6\uFF0C\u9ED8\u8BA4\u503C\u4E3A 1\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2, 3, 4, [5, 6]]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2, 3, 4, 5, 6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u79FB\u9664\u6570\u7EC4\u4E2D\u7684\u7A7A\u9879\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr4<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u6570\u7EC4\u964D\u7EF4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u6570\u7EC4\u964D\u7EF4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u6570\u7EC4\u964D\u7EF4</h3><h2 id="_5-array-prototype-flatmap" tabindex="-1"><a class="header-anchor" href="#_5-array-prototype-flatmap" aria-hidden="true">#</a> 5. Array.prototype.flatMap()</h2><p><code>flatMap()</code> \u65B9\u6CD5\u9996\u5148\u4F7F\u7528\u6620\u5C04\u51FD\u6570\u6620\u5C04\u6BCF\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u5C06\u7ED3\u679C\u538B\u7F29\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002 \u5B83\u4E0E <code>map</code> \u8FDE\u7740\u6DF1\u5EA6\u503C\u4E3A 1 \u7684 <code>flat</code> \u7684\u6548\u679C\u51E0\u4E4E\u76F8\u540C\uFF0C\u4F46 flatMap \u901A\u5E38\u5728\u5408\u5E76\u6210\u4E00\u79CD\u65B9\u6CD5\u7684\u6548\u7387\u7A0D\u5FAE\u9AD8\u4E00\u4E9B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4, 5, 6]</span>
<span class="token comment">// \u6548\u679C\u7B49\u540C\u4E8E</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53EF\u7528\u4E8E-\u9700\u8981\u5728-map-\u65F6-\u63D2\u5165-\u51CF\u5C11-\u67D0\u4E00\u9879" tabindex="-1"><a class="header-anchor" href="#\u53EF\u7528\u4E8E-\u9700\u8981\u5728-map-\u65F6-\u63D2\u5165-\u51CF\u5C11-\u67D0\u4E00\u9879" aria-hidden="true">#</a> \u53EF\u7528\u4E8E \u9700\u8981\u5728 <code>map()</code> \u65F6 <strong>\u63D2\u5165/\u51CF\u5C11</strong> \u67D0\u4E00\u9879</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span>

a<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 1, 4, 20, 16, 1, 18]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66FF\u4EE3\u65B9\u6848\uFF08\u4F4E\u6548\uFF0C\u4E0D\u63A8\u8350\uFF09\uFF1A</p><p><code>reduce()</code> \u52A0 <code>concat()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

arr<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 2, 4, 3, 6, 4, 8]</span>
<span class="token comment">// </span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 2, 4, 3, 6, 4, 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-array-prototype-foreach" tabindex="-1"><a class="header-anchor" href="#_6-array-prototype-foreach" aria-hidden="true">#</a> 6. Array.prototype.forEach()</h2><p><code>forEach()</code> \u65B9\u6CD5\u5BF9\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u6267\u884C\u4E00\u6B21\u7ED9\u5B9A\u7684\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

array1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &quot;a&quot;</span>
<span class="token comment">// &quot;b&quot;</span>
<span class="token comment">// &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>forEach</code> \u4E0D\u4F1A\u76F4\u63A5\u6539\u53D8\u8C03\u7528\u5B83\u7684\u5BF9\u8C61\uFF0C\u4F46\u662F\u90A3\u4E2A\u5BF9\u8C61\u53EF\u80FD\u4F1A\u88AB <code>callbackFn</code> \u51FD\u6570\u6539\u53D8\u3002</p><p>\u5907\u6CE8\uFF1A\u9664\u4E86\u629B\u51FA\u5F02\u5E38\u4EE5\u5916\uFF0C\u6CA1\u6709\u529E\u6CD5\u4E2D\u6B62\u6216\u8DF3\u51FA forEach() \u5FAA\u73AF\u3002</p><p>\u82E5\u4F60\u9700\u8981\u63D0\u524D\u7EC8\u6B62\u5FAA\u73AF\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\uFF1A</p><ul><li>for\u5FAA\u73AF</li><li>for...in/for...of \u5FAA\u73AF</li><li>Array.prototype.every()</li><li>Array.prototype.some()</li><li>Array.prototype.find()</li><li>Array.prototype.findIndex()</li></ul><p>\u6700\u540E\u56DB\u4E2A\u65B9\u6CD5\uFF0C\u751A\u81F3\u53EF\u4EE5\u5BF9\u6570\u7EC4\u5143\u7D20\u5224\u65AD\uFF0C\u4EE5\u4FBF\u786E\u5B9A\u662F\u5426\u9700\u8981\u7EE7\u7EED\u904D\u5386\u3002</p><h3 id="\u5E38\u7528\u4E8E-\u4E0D\u9700\u8981\u5F02\u6B65-\u4E14-\u4E0D\u9700\u8981\u63D0\u524D\u8DF3\u51FA-\u7684\u6570\u7EC4\u5FAA\u73AF\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u4E0D\u9700\u8981\u5F02\u6B65-\u4E14-\u4E0D\u9700\u8981\u63D0\u524D\u8DF3\u51FA-\u7684\u6570\u7EC4\u5FAA\u73AF\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E <em>\u4E0D\u9700\u8981\u5F02\u6B65</em> \u4E14 <em>\u4E0D\u9700\u8981\u63D0\u524D\u8DF3\u51FA</em> \u7684\u6570\u7EC4\u5FAA\u73AF\u3002</h3><h2 id="_7-array-prototype-keys" tabindex="-1"><a class="header-anchor" href="#_7-array-prototype-keys" aria-hidden="true">#</a> 7. Array.prototype.keys()</h2><p><code>keys()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u952E\u7684 <code>Array Iterator</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iterator <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 0</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B64\u65B9\u6CD5\u5F88\u5C11\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u6B64\u65B9\u6CD5\u5F88\u5C11\u4F7F\u7528" aria-hidden="true">#</a> \u6B64\u65B9\u6CD5\u5F88\u5C11\u4F7F\u7528</h3><h2 id="_8-array-prototype-map" tabindex="-1"><a class="header-anchor" href="#_8-array-prototype-map" aria-hidden="true">#</a> 8. Array.prototype.map()</h2><p><code>map()</code> \u65B9\u6CD5 <strong>\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4</strong>\uFF0C\u8FD9\u4E2A\u65B0\u6570\u7EC4\u7531\u539F\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u8C03\u7528\u4E00\u6B21\u63D0\u4F9B\u7684\u51FD\u6570\u540E\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2, 8, 18, 32]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u82E5\u4F60\u4E0D\u60F3\u8FD4\u56DE\u7684\u65B0\u6570\u7EC4\uFF0C\u8BF7\u4F7F\u7528 <code>forEach()</code> \u6216 <code>for...of</code>\u3002</p><h3 id="\u5E38\u7528\u4E8E-\u904D\u5386\u4FEE\u6539\u67D0\u4E00\u9879-\u4E14-\u521B\u5EFA\u65B0\u6570\u7EC4\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u904D\u5386\u4FEE\u6539\u67D0\u4E00\u9879-\u4E14-\u521B\u5EFA\u65B0\u6570\u7EC4\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u904D\u5386\u4FEE\u6539\u67D0\u4E00\u9879 \u4E14 \u521B\u5EFA\u65B0\u6570\u7EC4\u3002</h3><h3 id="\u7ECF\u5178\u516B\u80A1\u6587" tabindex="-1"><a class="header-anchor" href="#\u7ECF\u5178\u516B\u80A1\u6587" aria-hidden="true">#</a> \u7ECF\u5178\u516B\u80A1\u6587\uFF1A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseInt<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u671F\u671B\u8F93\u51FA [1, 2, 3], \u800C\u5B9E\u9645\u7ED3\u679C\u662F [1, NaN, NaN]</p><p><code>parseInt</code> \u7ECF\u5E38\u88AB\u5E26\u7740\u4E00\u4E2A\u53C2\u6570\u4F7F\u7528\uFF0C\u4F46\u662F\u8FD9\u91CC\u63A5\u53D7\u4E24\u4E2A\u3002 \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\u800C\u7B2C\u4E8C\u4E2A\u662F\u56DE\u8C03\u51FD\u6570\u7684\u57FA\uFF0C<code>Array.prototype.map</code> \u4F20\u9012 3 \u4E2A\u53C2\u6570\uFF1Aelement\uFF0Cindex\uFF0Carray</p><p>\u7B2C\u4E09\u4E2A\u53C2\u6570\u88AB <code>parseInt</code> \u5FFD\u89C6\u4E86\uFF0C\u4F46\u4E0D\u662F\u7B2C\u4E8C\u4E2A\u3002\u56E0\u6B64\u53EF\u80FD\u51FA\u73B0\u6DF7\u6DC6\u3002 \u4E0B\u9762\u662F\u8FED\u4EE3\u6B65\u9AA4\u7684\u62C6\u89E3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-array-prototype-reduce" tabindex="-1"><a class="header-anchor" href="#_9-array-prototype-reduce" aria-hidden="true">#</a> 9. Array.prototype.reduce()</h2><p><code>reduce()</code> \u65B9\u6CD5\u5BF9\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u6309\u5E8F\u6267\u884C\u4E00\u4E2A\u7531\u60A8\u63D0\u4F9B\u7684 <strong>reducer</strong> \u51FD\u6570\u3002 \u6BCF\u4E00\u6B21\u8FD0\u884C <strong>reducer</strong> \u4F1A\u5C06\u5148\u524D\u5143\u7D20\u7684\u8BA1\u7B97\u7ED3\u679C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u6700\u540E\u5C06\u5176\u7ED3\u679C\u6C47\u603B\u4E3A\u5355\u4E2A\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u6C42\u548C</span>
<span class="token keyword">const</span> initialValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sum <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> cur<span class="token punctuation">,</span> initialValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u7D2F\u52A0\u5BF9\u8C61\u6570\u7EC4\u91CC\u7684\u503C-\u4F8B\u5982\u6C42\u548C" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u7D2F\u52A0\u5BF9\u8C61\u6570\u7EC4\u91CC\u7684\u503C-\u4F8B\u5982\u6C42\u548C" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u7D2F\u52A0\u5BF9\u8C61\u6570\u7EC4\u91CC\u7684\u503C\uFF0C\u4F8B\u5982\u6C42\u548C</h3><p>\u6570\u7EC4\u53BB\u91CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arrary1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">var</span> array2 <span class="token operator">=</span> arrary1<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prev<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> prev<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span>
  <span class="token keyword">return</span> prev
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;e&#39;, &#39;d&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u8C61\u6570\u7EC4\u5206\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;apple&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;vegetable&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tomato&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;mango&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> dictionary <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

array1<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prev<span class="token punctuation">[</span>cur<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    prev<span class="token punctuation">[</span>cur<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    prev<span class="token punctuation">[</span>cur<span class="token punctuation">.</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>cur<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> prev
<span class="token punctuation">}</span><span class="token punctuation">,</span> dictionary<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {fruit: Array(2), vegetable: Array(1)}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-array-prototype-reduceright" tabindex="-1"><a class="header-anchor" href="#_10-array-prototype-reduceright" aria-hidden="true">#</a> 10. Array.prototype.reduceRight()</h2><p><code>reduceRight()</code> \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u7D2F\u52A0\u5668\uFF08accumulator\uFF09\u548C\u6570\u7EC4\u7684\u6BCF\u4E2A\u503C\uFF08\u4ECE\u53F3\u5230\u5DE6\uFF09\u5C06\u5176\u51CF\u5C11\u4E3A\u5355\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">reduceRight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5, 2, 3, 0, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reduce-\u4E0E-reduceright-\u4E4B\u95F4\u7684\u533A\u522B-\u6B63\u5E8F\u904D\u5386\u548C\u5012\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#reduce-\u4E0E-reduceright-\u4E4B\u95F4\u7684\u533A\u522B-\u6B63\u5E8F\u904D\u5386\u548C\u5012\u5E8F\u904D\u5386" aria-hidden="true">#</a> <code>reduce</code> \u4E0E <code>reduceRight</code> \u4E4B\u95F4\u7684\u533A\u522B\uFF1A\u6B63\u5E8F\u904D\u5386\u548C\u5012\u5E8F\u904D\u5386</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> left  <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> right <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">reduceRight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;12345&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;54321&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-array-prototype-some" tabindex="-1"><a class="header-anchor" href="#_11-array-prototype-some" aria-hidden="true">#</a> 11. Array.prototype.some()</h2><p><code>some()</code> \u65B9\u6CD5\u6D4B\u8BD5\u6570\u7EC4\u4E2D\u662F\u4E0D\u662F\u81F3\u5C11\u6709 1 \u4E2A\u5143\u7D20\u901A\u8FC7\u4E86\u88AB\u63D0\u4F9B\u7684\u51FD\u6570\u6D4B\u8BD5\u3002\u5B83\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A <code>Boolean</code> \u7C7B\u578B\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5907\u6CE8\uFF1A \u5982\u679C\u7528\u4E00\u4E2A\u7A7A\u6570\u7EC4\u8FDB\u884C\u6D4B\u8BD5\uFF0C\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\u5B83\u8FD4\u56DE\u7684\u90FD\u662Ffalse\u3002</p><h3 id="\u5E38\u7528\u4E8E\u68C0\u67E5\u6570\u7EC4\u662F\u5426\u5B58\u5728\u4E0D\u7B26\u5408\u6761\u4EF6\u7684\u503C\u3002-\u6027\u80FD\u63A8\u8350-\u627E\u5230\u7B2C\u4E00\u4E2A\u503C\u5C31\u8DF3\u51FA\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u68C0\u67E5\u6570\u7EC4\u662F\u5426\u5B58\u5728\u4E0D\u7B26\u5408\u6761\u4EF6\u7684\u503C\u3002-\u6027\u80FD\u63A8\u8350-\u627E\u5230\u7B2C\u4E00\u4E2A\u503C\u5C31\u8DF3\u51FA\u5FAA\u73AF" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u68C0\u67E5\u6570\u7EC4\u662F\u5426\u5B58\u5728\u4E0D\u7B26\u5408\u6761\u4EF6\u7684\u503C\u3002\uFF08\u6027\u80FD\u63A8\u8350\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u503C\u5C31\u8DF3\u51FA\u5FAA\u73AF\uFF09</h3><h2 id="_12-array-prototype-values" tabindex="-1"><a class="header-anchor" href="#_12-array-prototype-values" aria-hidden="true">#</a> 12. Array.prototype.values()</h2><p><code>values()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <code>Array Iterator</code> \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u5305\u542B\u6570\u7EC4\u6BCF\u4E2A\u7D22\u5F15\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iterator <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// &quot;a&quot;</span>
<span class="token comment">// &quot;b&quot;</span>
<span class="token comment">// &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E0E-key-\u65B9\u6CD5\u4E00\u6837\u5F88\u5C11\u88AB\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E0E-key-\u65B9\u6CD5\u4E00\u6837\u5F88\u5C11\u88AB\u4F7F\u7528" aria-hidden="true">#</a> \u4E0E <code>key()</code> \u65B9\u6CD5\u4E00\u6837\u5F88\u5C11\u88AB\u4F7F\u7528</h3><h2 id="_13-array-prototype-iterator" tabindex="-1"><a class="header-anchor" href="#_13-array-prototype-iterator" aria-hidden="true">#</a> 13. Array.prototype<a href="">@@iterator</a></h2><p><code>@@iterator</code> \u548C <code>values()</code> \u7684\u521D\u59CB\u503C\u662F\u540C\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\u3002</p><h3 id="\u540C-values-\u65B9\u6CD5\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u540C-values-\u65B9\u6CD5\u4F7F\u7528" aria-hidden="true">#</a> \u540C <code>values()</code> \u65B9\u6CD5\u4F7F\u7528</h3>`,79),j={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"Author",-1),_=s("\u56DE\u7B54\u8005: "),w={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},A=s("kangyana"),S=p(`<h1 id="\u4E8C\u3001\u6570\u7EC4\u589E\u5220\u6539" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u6570\u7EC4\u589E\u5220\u6539" aria-hidden="true">#</a> \u4E8C\u3001\u6570\u7EC4\u589E\u5220\u6539</h1><h2 id="_1-array-prototype-concat" tabindex="-1"><a class="header-anchor" href="#_1-array-prototype-concat" aria-hidden="true">#</a> 1. Array.prototype.concat()</h2><p><code>concat()</code> \u65B9\u6CD5\u7528\u4E8E\u5408\u5E76\u4E24\u4E2A\u6216\u591A\u4E2A\u6570\u7EC4\u3002\u6B64\u65B9\u6CD5\u4E0D\u4F1A\u66F4\u6539\u73B0\u6709\u6570\u7EC4\uFF0C\u800C\u662F\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> array2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> array3 <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>array2<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5408\u5E76\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5408\u5E76\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5408\u5E76\u6570\u7EC4</h3><p>\u4F7F\u7528 Symbol.isConcatSpreadable \u5408\u5E76\u7C7B\u6570\u7EC4\u5BF9\u8C61 <code>concat</code> \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u5C06\u7C7B\u6570\u7EC4\u5BF9\u8C61\u89C6\u4F5C\u6570\u7EC4\u2014\u2014\u4EC5\u5728 <code>Symbol.isConcatSpreadable</code> \u88AB\u8BBE\u7F6E\u4E3A\u771F\u503C\uFF08\u4F8B\u5982\uFF0Ctrue\uFF09\u65F6\u624D\u4F1A\u5C06\u7C7B\u6570\u7EC4\u5BF9\u8C61\u89C6\u4F5C\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 0, { &#39;0&#39;: 1, &#39;1&#39;: 2, &#39;2&#39;: 3, length: 3 }, 1, 2, 3 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-array-prototype-copywithin" tabindex="-1"><a class="header-anchor" href="#_2-array-prototype-copywithin" aria-hidden="true">#</a> 2. Array.prototype.copyWithin()</h2><p><code>copyWithin()</code> \u65B9\u6CD5\u6D45\u590D\u5236\u6570\u7EC4\u7684\u4E00\u90E8\u5206\u5230\u540C\u4E00\u6570\u7EC4\u4E2D\u7684\u53E6\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5E76\u8FD4\u56DE\u5B83\uFF0C\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;d&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;d&quot;, &quot;d&quot;, &quot;e&quot;, &quot;d&quot;, &quot;e&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copywithin-\u5C31\u50CF-c-\u548C-c-\u7684-memcpy-\u51FD\u6570\u4E00\u6837-\u4E14\u5B83\u662F\u7528\u6765\u79FB\u52A8-array-\u6216\u8005-typedarray-\u6570\u636E\u7684\u4E00\u4E2A\u9AD8\u6027\u80FD\u7684\u65B9\u6CD5\u3002" tabindex="-1"><a class="header-anchor" href="#copywithin-\u5C31\u50CF-c-\u548C-c-\u7684-memcpy-\u51FD\u6570\u4E00\u6837-\u4E14\u5B83\u662F\u7528\u6765\u79FB\u52A8-array-\u6216\u8005-typedarray-\u6570\u636E\u7684\u4E00\u4E2A\u9AD8\u6027\u80FD\u7684\u65B9\u6CD5\u3002" aria-hidden="true">#</a> <code>copyWithin</code> \u5C31\u50CF C \u548C C++ \u7684 <code>memcpy</code> \u51FD\u6570\u4E00\u6837\uFF0C\u4E14\u5B83\u662F\u7528\u6765\u79FB\u52A8 <code>Array</code> \u6216\u8005 <code>TypedArray</code> \u6570\u636E\u7684\u4E00\u4E2A\u9AD8\u6027\u80FD\u7684\u65B9\u6CD5\u3002</h3><p>\u590D\u5236\u4EE5\u53CA\u7C98\u8D34\u5E8F\u5217\u8FD9\u4E24\u8005\u662F\u4E3A\u4E00\u4F53\u7684\u64CD\u4F5C;\u5373\u4F7F\u590D\u5236\u548C\u7C98\u8D34\u533A\u57DF\u91CD\u53E0\uFF0C\u7C98\u8D34\u7684\u5E8F\u5217\u4E5F\u4F1A\u6709\u62F7\u8D1D\u6765\u7684\u503C\u3002</p><h2 id="_3-array-prototype-fill" tabindex="-1"><a class="header-anchor" href="#_3-array-prototype-fill" aria-hidden="true">#</a> 3. Array.prototype.fill()</h2><p><code>fill()</code> \u65B9\u6CD5\u7528\u4E00\u4E2A\u56FA\u5B9A\u503C\u586B\u5145\u4E00\u4E2A\u6570\u7EC4\u4E2D\u4ECE\u8D77\u59CB\u7D22\u5F15\u5230\u7EC8\u6B62\u7D22\u5F15\u5185\u7684\u5168\u90E8\u5143\u7D20\u3002\u4E0D\u5305\u62EC\u7EC8\u6B62\u7D22\u5F15\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 0, 0]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 5, 5, 5]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [6, 6, 6, 6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5FEB\u901F\u586B\u5145\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5FEB\u901F\u586B\u5145\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5FEB\u901F\u586B\u5145\u6570\u7EC4</h3><h2 id="_4-array-prototype-pop" tabindex="-1"><a class="header-anchor" href="#_4-array-prototype-pop" aria-hidden="true">#</a> 4. Array.prototype.pop()</h2><p><code>pop()</code> \u65B9\u6CD5\u4ECE\u6570\u7EC4\u4E2D\u5220\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u5143\u7D20\u7684\u503C\u3002\u6B64\u65B9\u6CD5\u4F1A\u66F4\u6539\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> plants <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;broccoli&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cauliflower&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cabbage&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;kale&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tomato&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plants<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;tomato&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plants<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;broccoli&quot;, &quot;cauliflower&quot;, &quot;cabbage&quot;, &quot;kale&quot;]</span>

plants<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plants<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;broccoli&quot;, &quot;cauliflower&quot;, &quot;cabbage&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5220\u9664\u6389\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5220\u9664\u6389\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4F4D" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5220\u9664\u6389\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4F4D</h3><h2 id="_5-array-prototype-push" tabindex="-1"><a class="header-anchor" href="#_5-array-prototype-push" aria-hidden="true">#</a> 5. Array.prototype.push()</h2><p><code>push()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;pigs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;goats&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sheep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> animals<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;cows&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;]</span>

animals<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;chickens&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cats&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;, &quot;chickens&quot;, &quot;cats&quot;, &quot;dogs&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u7ED9\u6570\u7EC4\u6DFB\u52A0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u7ED9\u6570\u7EC4\u6DFB\u52A0\u5143\u7D20" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u7ED9\u6570\u7EC4\u6DFB\u52A0\u5143\u7D20</h3><p>\u5408\u5E76\u4E24\u4E2A\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;parsnip&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;potato&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> moreVegs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;celery&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;beetroot&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F8\u5F53\u4E8E vegetables.push(...moreVegs);</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>vegetables<span class="token punctuation">,</span> moreVegs<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vegetables<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;parsnip&#39;, &#39;potato&#39;, &#39;celery&#39;, &#39;beetroot&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u50CF\u6570\u7EC4\u4E00\u6837\u4F7F\u7528\u5BF9\u8C61 <code>push</code> \u662F\u7279\u610F\u8BBE\u8BA1\u4E3A\u901A\u7528\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u83B7\u5F97\u4FBF\u5229\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

    <span class="token function-variable function">addElem</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">addElem</span> <span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// obj.length is automatically incremented</span>
        <span class="token comment">// every time an element is added.</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span><span class="token function">addElem</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">addElem</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {0: {}, 1: {}, length: 2, addElem: \u0192}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-array-prototype-shift" tabindex="-1"><a class="header-anchor" href="#_6-array-prototype-shift" aria-hidden="true">#</a> 6. Array.prototype.shift()</h2><p><code>shift()</code> \u65B9\u6CD5\u4ECE\u6570\u7EC4\u4E2D\u5220\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u5143\u7D20\u7684\u503C\u3002\u6B64\u65B9\u6CD5\u66F4\u6539\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstElement <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2, 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>firstElement<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5220\u9664\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5220\u9664\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4F4D" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5220\u9664\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4F4D</h3><h2 id="_7-array-prototype-slice" tabindex="-1"><a class="header-anchor" href="#_7-array-prototype-slice" aria-hidden="true">#</a> 7. Array.prototype.slice()</h2><p><code>slice()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u5BF9\u8C61\uFF0C\u8FD9\u4E00\u5BF9\u8C61\u662F\u4E00\u4E2A\u7531 <code>begin</code> \u548C <code>end</code> \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D\uFF08\u5305\u62EC begin\uFF0C\u4E0D\u5305\u62ECend\uFF09\u3002\u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bison&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;camel&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;duck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;elephant&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;camel&quot;, &quot;duck&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;bison&quot;, &quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;duck&quot;, &quot;elephant&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;camel&quot;, &quot;duck&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;ant&quot;, &quot;bison&quot;, &quot;camel&quot;, &quot;duck&quot;, &quot;elephant&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u622A\u53D6\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u622A\u53D6\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u622A\u53D6\u6570\u7EC4</h3><p>\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> list1 <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u4F7F\u7528 <code>Array.prototype.slice.call(arguments)</code>\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u7B80\u5355\u7684\u4F7F\u7528 <code>[].slice.call(arguments) \u6765\u4EE3\u66FF</code>\u3002\u53E6\u5916\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>bind</code> \u6765\u7B80\u5316\u8BE5\u8FC7\u7A0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">)</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> list1 <span class="token operator">=</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-array-prototype-splice" tabindex="-1"><a class="header-anchor" href="#_8-array-prototype-splice" aria-hidden="true">#</a> 8. Array.prototype.splice()</h2><p><code>splice()</code> \u65B9\u6CD5\u901A\u8FC7\u5220\u9664\u6216\u66FF\u6362\u73B0\u6709\u5143\u7D20\u6216\u8005\u539F\u5730\u6DFB\u52A0\u65B0\u7684\u5143\u7D20\u6765\u4FEE\u6539\u6570\u7EC4\uFF0C\u5E76\u4EE5\u6570\u7EC4\u5F62\u5F0F\u8FD4\u56DE\u88AB\u4FEE\u6539\u7684\u5185\u5BB9\u3002\u6B64\u65B9\u6CD5\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> months <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;March&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;April&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;June&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
months<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Feb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>months<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;June&quot;]</span>

months<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;May&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>months<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u66FF\u6362\u6570\u7EC4\u4E2D\u67D0\u4E00\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u66FF\u6362\u6570\u7EC4\u4E2D\u67D0\u4E00\u6BB5" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u66FF\u6362\u6570\u7EC4\u4E2D\u67D0\u4E00\u6BB5</h3><h2 id="_9-array-prototype-unshift" tabindex="-1"><a class="header-anchor" href="#_9-array-prototype-unshift" aria-hidden="true">#</a> 9. Array.prototype.unshift()</h2><p><code>unshift()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u7684\u5F00\u5934\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5, 1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u6DFB\u52A0\u591A\u4E2A\u5143\u7D20\u5230\u6570\u7EC4\u5F00\u5934" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u6DFB\u52A0\u591A\u4E2A\u5143\u7D20\u5230\u6570\u7EC4\u5F00\u5934" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u6DFB\u52A0\u591A\u4E2A\u5143\u7D20\u5230\u6570\u7EC4\u5F00\u5934</h3>`,48),I={class:"custom-container tip"},E=n("p",{class:"custom-container-title"},"Author",-1),O=s("\u56DE\u7B54\u8005: "),L={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},N=s("kangyana"),C=p(`<h1 id="_3-\u6570\u7EC4\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u7EC4\u67E5\u8BE2" aria-hidden="true">#</a> 3. \u6570\u7EC4\u67E5\u8BE2</h1><h2 id="_1-array-prototype-at" tabindex="-1"><a class="header-anchor" href="#_1-array-prototype-at" aria-hidden="true">#</a> 1. Array.prototype.at()</h2><p><code>at()</code> \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u6574\u6570\u503C\u5E76\u8FD4\u56DE\u8BE5\u7D22\u5F15\u7684\u9879\u76EE\uFF0C\u5141\u8BB8\u6B63\u6570\u548C\u8D1F\u6570\u3002\u8D1F\u6574\u6570\u4ECE\u6570\u7EC4\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u9879\u76EE\u5F00\u59CB\u5012\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>array1<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;2: 8&quot;</span>

index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>array1<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;-2: 130&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u5FEB\u901F\u5BFB\u627E\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u5FEB\u901F\u5BFB\u627E\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u5FEB\u901F\u5BFB\u627E\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C</h3><p>\u6BD4\u8F83\u4E0D\u540C\u7684\u6570\u7EC4\u65B9\u6CD5 \u8FD9\u4E2A\u4F8B\u5B50\u6BD4\u8F83\u4E86\u9009\u62E9 <code>Array</code> \u4E2D\u5012\u6570\u7B2C\u4E8C\u9879\u7684\u4E0D\u540C\u65B9\u6CD5\uFF0C\u51F8\u663E\u4E86 <code>at()</code> \u65B9\u6CD5\u7684\u7B80\u6D01\u6027\u548C\u53EF\u8BFB\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u53CA\u6570\u7EC4\u5143\u7D20\u3002</span>
<span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u957F\u5EA6\u5C5E\u6027\u3002</span>
<span class="token keyword">const</span> lengthWay <span class="token operator">=</span> colors<span class="token punctuation">[</span>colors<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lengthWay<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;green&#39;</span>

<span class="token comment">// \u4F7F\u7528 slice() \u65B9\u6CD5\u3002\u6CE8\u610F\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002</span>
<span class="token keyword">const</span> sliceWay <span class="token operator">=</span> colors<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sliceWay<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;green&#39;</span>

<span class="token comment">// \u4F7F\u7528 at() \u65B9\u6CD5\u3002</span>
<span class="token keyword">const</span> atWay <span class="token operator">=</span> colors<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>atWay<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;green&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-array-prototype-find" tabindex="-1"><a class="header-anchor" href="#_2-array-prototype-find" aria-hidden="true">#</a> 2. Array.prototype.find()</h2><p><code>find()</code> \u65B9\u6CD5\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u503C\u3002\u5426\u5219\u8FD4\u56DE <code>undefined</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> found <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> element <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>found<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u7528\u5BF9\u8C61\u7684\u5C5E\u6027\u67E5\u627E\u6570\u7EC4\u91CC\u7684\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u7528\u5BF9\u8C61\u7684\u5C5E\u6027\u67E5\u627E\u6570\u7EC4\u91CC\u7684\u5BF9\u8C61" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u7528\u5BF9\u8C61\u7684\u5C5E\u6027\u67E5\u627E\u6570\u7EC4\u91CC\u7684\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> inventory <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;apples&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bananas&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherries&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> item <span class="token operator">=</span> inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;cherries&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: &#39;cherries&#39;, quantity: 5 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-array-prototype-findindex" tabindex="-1"><a class="header-anchor" href="#_3-array-prototype-findindex" aria-hidden="true">#</a> 3. Array.prototype.findIndex()</h2><p><code>findIndex()</code> \u65B9\u6CD5\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\u3002\u82E5\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u5143\u7D20\u5219\u8FD4\u56DE-1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> index <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> element <span class="token operator">&gt;</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002</h3><h2 id="_4-array-prototype-findlast" tabindex="-1"><a class="header-anchor" href="#_4-array-prototype-findlast" aria-hidden="true">#</a> 4. Array.prototype.findLast()</h2><p><code>findLast()</code> \u65B9\u6CD5\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u6761\u4EF6\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u503C\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE <code>undefined</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> item <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">findLast</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> element <span class="token operator">&gt;</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 44</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u3002</h3><h2 id="_5-array-prototype-findlastindex" tabindex="-1"><a class="header-anchor" href="#_5-array-prototype-findlastindex" aria-hidden="true">#</a> 5. Array.prototype.findLastIndex()</h2><p><code>findLastIndex()</code> \u65B9\u6CD5\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u6761\u4EF6\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\u3002\u82E5\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE -1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> item <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">findLastIndex</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> element <span class="token operator">&gt;</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002</h3><h2 id="_6-array-prototype-includes" tabindex="-1"><a class="header-anchor" href="#_6-array-prototype-includes" aria-hidden="true">#</a> 6. Array.prototype.includes()</h2><p><code>includes()</code> \u65B9\u6CD5\u7528\u6765\u5224\u65AD\u4E00\u4E2A\u6570\u7EC4\u662F\u5426\u5305\u542B\u4E00\u4E2A\u6307\u5B9A\u7684\u503C\uFF0C\u6839\u636E\u60C5\u51B5\uFF0C\u5982\u679C\u5305\u542B\u5219\u8FD4\u56DE <code>true</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token keyword">const</span> pets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bat&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pets<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pets<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>includes()</code> \u65B9\u6CD5\u6709\u610F\u8BBE\u8BA1\u4E3A\u901A\u7528\u65B9\u6CD5\u3002\u5B83\u4E0D\u8981\u6C42this\u503C\u662F\u6570\u7EC4\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5B83\u53EF\u4EE5\u88AB\u7528\u4E8E\u5176\u4ED6\u7C7B\u578B\u7684\u5BF9\u8C61 (\u6BD4\u5982\u7C7B\u6570\u7EC4\u5BF9\u8C61)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
\xB7\xB7\xB7

### \u5E38\u7528\u4E8E \u5FEB\u901F\u67E5\u627E\u4E00\u4E2A\u503C\u662F\u5426\u5305\u542B\u5728\u8BE5\u6570\u7EC4\u4E2D\u3002

## <span class="token number">7.</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">indexOf()</span><span class="token template-punctuation string">\`</span></span> \u65B9\u6CD5\u8FD4\u56DE\u5728\u6570\u7EC4\u4E2D\u53EF\u4EE5\u627E\u5230\u7ED9\u5B9A\u5143\u7D20\u7684\u7B2C\u4E00\u4E2A\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE <span class="token operator">-</span><span class="token number">1</span>\u3002
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>\`javascript
<span class="token keyword">const</span> beasts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;ant&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bison&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;camel&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;duck&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bison&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;bison&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;bison&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>beasts<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;giraffe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002</h3><h2 id="_8-array-prototype-lastindexof" tabindex="-1"><a class="header-anchor" href="#_8-array-prototype-lastindexof" aria-hidden="true">#</a> 8. Array.prototype.lastIndexOf()</h2><p><code>lastIndexOf()</code> \u65B9\u6CD5\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\uFF08\u4E5F\u5373\u6709\u6548\u7684 JavaScript \u503C\u6216\u53D8\u91CF\uFF09\u5728\u6570\u7EC4\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u8FD4\u56DE -1\u3002 \u4ECE\u6570\u7EC4\u7684\u540E\u9762\u5411\u524D\u67E5\u627E\uFF0C\u4ECE <code>fromIndex</code> \u5904\u5F00\u59CB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Dodo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tiger&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Penguin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Dodo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Dodo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;Tiger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u5FEB\u901F\u67E5\u627E\u6570\u7EC4\u4E2D\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\u3002</h3><h2 id="_9-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_9-\u603B\u7ED3" aria-hidden="true">#</a> 9. \u603B\u7ED3</h2><p>\u5982\u679C\u4F60\u9700\u8981\u67E5\u627E\u7684\u65B9\u6CD5\uFF1A</p><ul><li>\u7B2C\u4E00\u4E2A\u5339\u914D\u7684\u5143\u7D20\uFF0C\u4F7F\u7528 <code>find()</code>\u3002</li><li>\u6700\u540E\u4E00\u4E2A\u5339\u914D\u7684\u5143\u7D20\uFF0C\u4F7F\u7528 <code>findLast()</code>\u3002</li><li>\u7B2C\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u4F7F\u7528 <code>findIndex()</code>\u3002</li><li>\u6700\u540E\u4E00\u4E2A\u5339\u914D\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u4F7F\u7528 <code>findLastIndex()</code>\u3002</li><li>\u7EAF\u7CB9\u67E5\u7B2C\u4E00\u4E2A\u5339\u914D\u7684\u7D22\u5F15\uFF0C\u4F7F\u7528 <code>indexOf()</code>\u3002\u5B83\u7C7B\u4F3C\u4E8E <code>findIndex()</code>\uFF0C\u4F46\u662F\u4F1A\u68C0\u67E5\u6BCF\u4E2A\u5143\u7D20\u662F\u5426\u548C\u503C\u76F8\u7B49\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528\u4E00\u4E2A\u6D4B\u8BD5\u51FD\u6570\u3002</li><li>\u7EAF\u7CB9\u67E5\u6700\u540E\u4E00\u4E2A\u5339\u914D\u7684\u7D22\u5F15\uFF0C\u4F7F\u7528 <code>lastIndexOf()</code>\u3002</li><li>\u4E00\u4E2A\u503C\u662F\u5426\u5305\u542B\u5728\u8BE5\u6570\u7EC4\u4E2D\uFF0C\u4F7F\u7528 <code>includes()</code>\u3002\u540C\u6837\u5730\uFF0C\u5B83\u68C0\u67E5\u6BCF\u4E2A\u5143\u7D20\u662F\u5426\u548C\u503C\u76F8\u7B49\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528\u4E00\u4E2A\u6D4B\u8BD5\u51FD\u6570\u3002</li><li>\u662F\u5426\u6709\u4EFB\u610F\u4E00\u4E2A\u5143\u7D20\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\uFF0C\u4F7F\u7528 <code>some()</code>\u3002</li></ul>`,37),F={class:"custom-container tip"},W=n("p",{class:"custom-container-title"},"Author",-1),M=s("\u56DE\u7B54\u8005: "),J={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},D=s("kangyana"),V=p(`<h1 id="_4-\u6570\u7EC4\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_4-\u6570\u7EC4\u521B\u5EFA" aria-hidden="true">#</a> 4. \u6570\u7EC4\u521B\u5EFA</h1><h2 id="_1-array-of" tabindex="-1"><a class="header-anchor" href="#_1-array-of" aria-hidden="true">#</a> 1. Array.of()</h2><p><code>Array.of()</code> \u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u53EF\u53D8\u6570\u91CF\u53C2\u6570\u7684\u65B0\u6570\u7EC4\u5B9E\u4F8B\uFF0C\u800C\u4E0D\u8003\u8651\u53C2\u6570\u7684\u6570\u91CF\u6216\u7C7B\u578B\u3002</p><h3 id="array-of-\u548C-array-\u6784\u9020\u51FD\u6570\u4E4B\u95F4\u7684\u533A\u522B\u5728\u4E8E\u5904\u7406\u6574\u6570\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#array-of-\u548C-array-\u6784\u9020\u51FD\u6570\u4E4B\u95F4\u7684\u533A\u522B\u5728\u4E8E\u5904\u7406\u6574\u6570\u53C2\u6570" aria-hidden="true">#</a> <code>Array.of()</code> \u548C <code>Array</code> \u6784\u9020\u51FD\u6570\u4E4B\u95F4\u7684\u533A\u522B\u5728\u4E8E\u5904\u7406\u6574\u6570\u53C2\u6570\uFF1A</h3><p>Array.of(7) \u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u5355\u4E2A\u5143\u7D20 7 \u7684\u6570\u7EC4\uFF0C\u800C Array(7) \u521B\u5EFA\u4E00\u4E2A\u957F\u5EA6\u4E3A 7 \u7684\u7A7A\u6570\u7EC4\u3002</p><div class="language-javascrpt ext-javascrpt line-numbers-mode"><pre class="language-javascrpt"><code>Array.of(7); // [7]
Array(7); // [empty \xD7 7]

Array.of(1, 2, 3); // [1, 2, 3]
Array(1, 2, 3);    // [1, 2, 3]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-array-from" tabindex="-1"><a class="header-anchor" href="#_2-array-from" aria-hidden="true">#</a> 2. Array.from()</h2><p><code>Array.from()</code> \u65B9\u6CD5\u5BF9\u4E00\u4E2A\u7C7B\u4F3C\u6570\u7EC4\u6216\u53EF\u8FED\u4EE3\u5BF9\u8C61\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\uFF0C\u6D45\u62F7\u8D1D\u7684\u6570\u7EC4\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;f&quot;, &quot;o&quot;, &quot;o&quot;]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2, 4, 6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u6839\u636E\u6307\u5B9A\u6570\u636E\u521B\u5EFA\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u6839\u636E\u6307\u5B9A\u6570\u636E\u521B\u5EFA\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u6839\u636E\u6307\u5B9A\u6570\u636E\u521B\u5EFA\u6570\u7EC4</h3><p>\u6570\u7EC4\u53BB\u91CD\u5408\u5E76</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">combine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6CA1\u6709\u53BB\u91CD\u590D\u7684\u65B0\u6570\u7EC4</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">combine</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),T={class:"custom-container tip"},B=n("p",{class:"custom-container-title"},"Author",-1),R=s("\u56DE\u7B54\u8005: "),P={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},$=s("kangyana"),U=p(`<h1 id="_5-\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#_5-\u5176\u4ED6" aria-hidden="true">#</a> 5. \u5176\u4ED6</h1><h2 id="_1-array-isarray" tabindex="-1"><a class="header-anchor" href="#_1-array-isarray" aria-hidden="true">#</a> 1. Array.isArray()</h2><p><code>Array.isArray()</code> \u7528\u4E8E\u786E\u5B9A\u4F20\u9012\u7684\u503C\u662F\u5426\u662F\u4E00\u4E2A <code>Array</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token string">&#39;foobar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// false</span>
Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-isarray-\u548C-instanceof-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#array-isarray-\u548C-instanceof-\u7684\u533A\u522B" aria-hidden="true">#</a> <code>Array.isArray()</code> \u548C <code>instanceof</code> \u7684\u533A\u522B</h3><p>\u5F53\u68C0\u6D4B <code>Array</code> \u5B9E\u4F8B\u65F6\uFF0C<code>Array.isArray</code> \u4F18\u4E8E <code>instanceof</code>\uFF0C\u56E0\u4E3A <code>Array.isArray</code> \u80FD\u68C0\u6D4B <code>iframes</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span><span class="token punctuation">;</span>
xArray <span class="token operator">=</span> window<span class="token punctuation">.</span>frames<span class="token punctuation">[</span>window<span class="token punctuation">.</span>frames<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Array<span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">xArray</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3]</span>

<span class="token comment">// \u6B63\u786E\u68C0\u67E5 Array</span>
Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
<span class="token comment">// Considered harmful, because doesn&#39;t work through iframes</span>
arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E-\u7CBE\u51C6\u7684\u5224\u65AD\u6570\u636E\u7C7B\u578B\u662F\u5426\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E-\u7CBE\u51C6\u7684\u5224\u65AD\u6570\u636E\u7C7B\u578B\u662F\u5426\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> \u5E38\u7528\u4E8E \u7CBE\u51C6\u7684\u5224\u65AD\u6570\u636E\u7C7B\u578B\u662F\u5426\u4E3A\u6570\u7EC4</h3><h2 id="_2-array-prototype-join" tabindex="-1"><a class="header-anchor" href="#_2-array-prototype-join" aria-hidden="true">#</a> 2. Array.prototype.join()</h2><p><code>join()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u6570\u7EC4\uFF08\u6216\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF09\u7684\u6240\u6709\u5143\u7D20\u8FDE\u63A5\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32\u5E76\u8FD4\u56DE\u8FD9\u4E2A\u5B57\u7B26\u4E32\u3002 \u5982\u679C\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u9879\u76EE\uFF0C\u90A3\u4E48\u5C06\u8FD4\u56DE\u8BE5\u9879\u76EE\u800C\u4E0D\u4F7F\u7528\u5206\u9694\u7B26\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> elements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Fire&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Air&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Water&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Fire,Air,Water&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;FireAirWater&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Fire-Air-Water&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8B66\u544A\uFF1A \u5982\u679C\u4E00\u4E2A\u5143\u7D20\u4E3A <code>undefined</code> \u6216 <code>null</code>\uFF0C\u5B83\u4F1A\u88AB\u8F6C\u6362\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002</p><h3 id="\u5E38\u7528\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32</h3><h2 id="_3-array-prototype-reverse" tabindex="-1"><a class="header-anchor" href="#_3-array-prototype-reverse" aria-hidden="true">#</a> 3. Array.prototype.reverse()</h2><p><code>reverse()</code> \u65B9\u6CD5\u5C06\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u4F4D\u7F6E\u98A0\u5012\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u6570\u7EC4\u3002 \u8BE5\u65B9\u6CD5\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> reversed <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reversed:&#39;</span><span class="token punctuation">,</span> reversed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;three&quot;, &quot;two&quot;, &quot;one&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;array1:&#39;</span><span class="token punctuation">,</span> array1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;three&quot;, &quot;two&quot;, &quot;one&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u6570\u7EC4\u53CD\u8F6C\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u6570\u7EC4\u53CD\u8F6C\u6392\u5E8F" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u6570\u7EC4\u53CD\u8F6C\u6392\u5E8F</h3><h2 id="_4-array-prototype-sort" tabindex="-1"><a class="header-anchor" href="#_4-array-prototype-sort" aria-hidden="true">#</a> 4. Array.prototype.sort()</h2>`,18),z=n("code",null,"sort()",-1),G=s(" \u65B9\u6CD5\u7528"),Q={href:"https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},Y=s("\u539F\u5730\u7B97\u6CD5"),Z=s("\u5BF9\u6570\u7EC4\u7684\u5143\u7D20\u8FDB\u884C\u6392\u5E8F\uFF0C\u5E76\u8FD4\u56DE\u6570\u7EC4\u3002 \u9ED8\u8BA4\u6392\u5E8F\u987A\u5E8F\u662F\u5728\u5C06\u5143\u7D20\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u6BD4\u8F83\u5B83\u4EEC\u7684 UTF-16 \u4EE3\u7801\u5355\u5143\u503C\u5E8F\u5217\u65F6\u6784\u5EFA\u7684\u3002"),H=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> months <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;March&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Feb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Dec&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>months<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;]</span>

<span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 100000, 21, 30, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BD4\u8F83\u51FD\u6570\u7684\u57FA\u672C\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compareFn</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>\u5728\u67D0\u4E9B\u6392\u5E8F\u89C4\u5219\u4E2D\uFF0Ca \u5C0F\u4E8E b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>\u5728\u8FD9\u4E00\u6392\u5E8F\u89C4\u5219\u4E0B\uFF0Ca \u5927\u4E8E b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// a \u4E00\u5B9A\u7B49\u4E8E b</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BD4\u8F83\u6570\u5B57\uFF08\u5347\u5E8F\u6392\u5217\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compareNumbers</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u975E ASCII \u5B57\u7B26\u6392\u5E8F \u5F53\u6392\u5E8F\u975E ASCII \u5B57\u7B26\u7684\u5B57\u7B26\u4E32\uFF08\u5982\u5305\u542B\u7C7B\u4F3C e, \xE9, \xE8, a, \xE4 \u7B49\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\uFF09\u3002 \u4E00\u4E9B\u975E\u82F1\u8BED\u8BED\u8A00\u7684\u5B57\u7B26\u4E32\u9700\u8981\u4F7F\u7528 <code>String.localeCompare</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;r\xE9serv\xE9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;premier&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;clich\xE9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;communiqu\xE9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;caf\xE9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;adieu&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
items<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  a<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  [&#39;adieu&#39;, &#39;caf\xE9&#39;, &#39;clich\xE9&#39;, &#39;communiqu\xE9&#39;, &#39;premier&#39;, &#39;r\xE9serv\xE9&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u4E8E\u6570\u7EC4\u624B\u52A8\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u4E8E\u6570\u7EC4\u624B\u52A8\u6392\u5E8F" aria-hidden="true">#</a> \u5E38\u7528\u4E8E\u6570\u7EC4\u624B\u52A8\u6392\u5E8F</h3><h2 id="_5-array-prototype-tolocalestring" tabindex="-1"><a class="header-anchor" href="#_5-array-prototype-tolocalestring" aria-hidden="true">#</a> 5. Array.prototype.toLocaleString()</h2><p><code>toLocaleString()</code> \u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u8868\u793A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u3002 \u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5C06\u4F7F\u7528\u5404\u81EA\u7684 <code>toLocaleString</code> \u65B9\u6CD5\u8F6C\u6210\u5B57\u7B26\u4E32\uFF0C\u8FD9\u4E9B\u5B57\u7B26\u4E32\u5C06\u4F7F\u7528\u4E00\u4E2A\u7279\u5B9A\u8BED\u8A00\u73AF\u5883\u7684\u5B57\u7B26\u4E32\uFF08\u4F8B\u5982\u9017\u53F7\uFF09\u9694\u5F00\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;21 Dec 1997 14:12:00 UTC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> localeString <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">timeZone</span><span class="token operator">:</span> <span class="token string">&#39;UTC&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localeString<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1,a,12/21/1997, 2:12:00 PM&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5C06\u4F1A\u4F7F\u7528\u5404\u81EA\u7684 <code>toLocaleString</code> \u65B9\u6CD5\uFF1A</p><ul><li>Object: Object.prototype.toLocaleString()</li><li>Number: Number.prototype.toLocaleString()</li><li>Date: Date.prototype.toLocaleString()</li></ul><h3 id="\u7528\u4E8E\u6570\u5B57\u8D27\u5E01\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7528\u4E8E\u6570\u5B57\u8D27\u5E01\u8F6C\u6362" aria-hidden="true">#</a> \u7528\u4E8E\u6570\u5B57\u8D27\u5E01\u8F6C\u6362\uFF1A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> prices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\uFFE57&#39;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">8123</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

prices<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token string">&#39;ja-JP&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">&#39;JPY&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;\uFFE57,\uFFE5500,\uFFE58,123,\uFFE512&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-array-prototype-tostring" tabindex="-1"><a class="header-anchor" href="#_6-array-prototype-tostring" aria-hidden="true">#</a> 6. Array.prototype.toString()</h2><p><code>toString()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u6307\u5B9A\u7684\u6570\u7EC4\u53CA\u5176\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1,2,a,1a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Array</code> \u5BF9\u8C61\u8986\u76D6\u4E86 <code>Object</code> \u7684 <code>toString</code> \u65B9\u6CD5\u3002 \u5BF9\u4E8E\u6570\u7EC4\u5BF9\u8C61\uFF0C<code>toString</code> \u65B9\u6CD5\u5728\u5185\u90E8\u8C03\u7528 <code>join()</code> \u65B9\u6CD5\u62FC\u63A5\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5176\u4E2D\u5305\u542B\u7528\u9017\u53F7\u5206\u9694\u7684\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u3002 \u5982\u679C <code>join</code> \u65B9\u6CD5\u4E0D\u53EF\u7528\uFF0C\u6216\u8005\u5B83\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C06\u4F7F\u7528 <code>Object.prototype.toString</code> \u4EE3\u66FF\uFF0C\u8FD4\u56DE <code>[object Array]</code>\u3002</p><p>\u5907\u6CE8\uFF1A\u5F53\u4E00\u4E2A\u6570\u7EC4\u88AB\u4F5C\u4E3A\u6587\u672C\u503C\u6216\u8005\u8FDB\u884C\u5B57\u7B26\u4E32\u62FC\u63A5\u64CD\u4F5C\u65F6\uFF0C\u5C06\u4F1A\u81EA\u52A8\u8C03\u7528\u5176 <code>toString</code> \u65B9\u6CD5\u3002</p><h3 id="\u7ECF\u5178\u516B\u80A1\u6587-1" tabindex="-1"><a class="header-anchor" href="#\u7ECF\u5178\u516B\u80A1\u6587-1" aria-hidden="true">#</a> \u7ECF\u5178\u516B\u80A1\u6587\uFF1A</h3><p><code>Object.prototype.toString</code> \u548C <code>Object.toString</code> \u662F\u4E00\u56DE\u4E8B\u5417\uFF1F</p><p>\u4E0D\u662F\u3002 \u56E0\u4E3A <code>Object.toString</code> \u662F <code>Object.__proto__.toString</code>\uFF0C\u4E5F\u5C31\u662F\u53BB\u4E0A\u4E00\u7EA7\u7684\u539F\u578B\u4E2D\u62FF\u7684\u65B9\u6CD5\uFF0C\u662F <code>Function.prototype.toString</code>\u3002 \u540C\u7406 <code>Number</code>\uFF0C<code>String</code>\uFF0C<code>Array</code> \u91CC\u7684 <code>toString</code> \u4E5F\u548C <code>Object.prototype.toString</code> \u4E0D\u4E00\u6837\uFF0C\u800C\u4E14\u5B83\u4EEC\u4E5F\u90FD\u88AB\u91CD\u5199\u4E86 <code>toString</code> \u65B9\u6CD5\u3002</p>`,23);function K(X,nn){const a=o("ExternalLinkIcon");return c(),u("div",null,[l,n("div",r,[k,n("p",null,[d,n("a",m,[v,t(a)])])]),n("div",b,[h,n("p",null,[g,n("a",y,[f,t(a)])])]),q,n("div",j,[x,n("p",null,[_,n("a",w,[A,t(a)])])]),S,n("div",I,[E,n("p",null,[O,n("a",L,[N,t(a)])])]),C,n("div",F,[W,n("p",null,[M,n("a",J,[D,t(a)])])]),V,n("div",T,[B,n("p",null,[R,n("a",P,[$,t(a)])])]),U,n("p",null,[z,G,n("a",Q,[Y,t(a)]),Z]),H])}const an=e(i,[["render",K],["__file","26.html.vue"]]);export{an as default};

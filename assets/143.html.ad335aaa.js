import{_ as e,r as o,o as c,c as l,b as n,d as t,e as s,a as p}from"./app.2a439a8a.js";const i={},u=n("h1",{id:"\u3010q143\u3011\u963F\u91CC\u7B14\u8BD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q143\u3011\u963F\u91CC\u7B14\u8BD5","aria-hidden":"true"},"#"),s(" \u3010Q143\u3011\u963F\u91CC\u7B14\u8BD5")],-1),r=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"\u66F4\u591A\u63CF\u8FF0"),n("p",null,"\u4E00\u9762")],-1),k={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"Issue",-1),v=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),m={href:"https://github.com/kangyana/daily-question/issues/143",target:"_blank",rel:"noopener noreferrer"},b=s("Issue 143"),h={class:"custom-container tip"},y=n("p",{class:"custom-container-title"},"Author",-1),f=s("\u56DE\u7B54\u8005: "),g={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},_=s("kangyana"),w=p(`<h2 id="_1-\u5B9E\u73B0-queryparse-\u51FD\u6570-\u5B8C\u6210\u89E3\u6790-url-\u53C2\u6570\u7684\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_1-\u5B9E\u73B0-queryparse-\u51FD\u6570-\u5B8C\u6210\u89E3\u6790-url-\u53C2\u6570\u7684\u529F\u80FD" aria-hidden="true">#</a> 1. \u5B9E\u73B0 queryParse \u51FD\u6570\uFF0C\u5B8C\u6210\u89E3\u6790 URL \u53C2\u6570\u7684\u529F\u80FD</h2><blockquote><p>\u7528\u6CD5\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> href <span class="token operator">=</span> <span class="token string">&#39;https://a.b.c?name=abc&amp;age=24&amp;code=%E6%B5%8B%E8%AF%95#main&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token function">queryParse</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;abc&#39;, age: 24, ...\u7B49 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u6790-\u6B64\u9898\u8003\u67E5-url-\u7ED3\u6784-\u548C-\u5B57\u7B26\u4E32\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-\u6B64\u9898\u8003\u67E5-url-\u7ED3\u6784-\u548C-\u5B57\u7B26\u4E32\u64CD\u4F5C" aria-hidden="true">#</a> \u89E3\u6790\uFF1A\u6B64\u9898\u8003\u67E5 URL \u7ED3\u6784 \u548C \u5B57\u7B26\u4E32\u64CD\u4F5C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u95EE\u9898\uFF1A\u5B9E\u73B0 queryParse \u51FD\u6570\uFF0C\u5B8C\u6210\u89E3\u6790 URL \u53C2\u6570\u7684\u529F\u80FD
 * <span class="token keyword">@param</span> <span class="token parameter">url</span>
 * <span class="token keyword">@returns</span> object
 */</span>
<span class="token keyword">function</span> <span class="token function">queryParse</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5BF9 url \u89E3\u7801</span>
  <span class="token keyword">const</span> decodeUrl <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u53D6 ? \u540E\u9762\u7684\u5B57\u7B26\u4E32</span>
  <span class="token keyword">const</span> afterStr <span class="token operator">=</span> decodeUrl<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// \u53BB\u6389 hash \u503C</span>
  <span class="token keyword">const</span> paramStr <span class="token operator">=</span> afterStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5BF9\u8C61\u6570\u7EC4\u8F6C\u5BF9\u8C61</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  paramStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    prev<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">queryParse</span><span class="token punctuation">(</span><span class="token string">&quot;https://a.b.c?name=abc&amp;age=24&amp;code=%E6%B5%8B%E8%AF%95#main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),q={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"Author",-1),j=s("\u56DE\u7B54\u8005: "),N={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},T=s("kangyana"),V=p(`<h2 id="_2-\u8BF7\u5B9E\u73B0\u5BF9\u4E8C\u53C9\u6811\u8282\u70B9\u7684\u904D\u5386\u8BBF\u95EE\u51FD\u6570-\u5E76\u6309\u8981\u6C42\u8F93\u51FAlog\u3002" tabindex="-1"><a class="header-anchor" href="#_2-\u8BF7\u5B9E\u73B0\u5BF9\u4E8C\u53C9\u6811\u8282\u70B9\u7684\u904D\u5386\u8BBF\u95EE\u51FD\u6570-\u5E76\u6309\u8981\u6C42\u8F93\u51FAlog\u3002" aria-hidden="true">#</a> 2. \u8BF7\u5B9E\u73B0\u5BF9\u4E8C\u53C9\u6811\u8282\u70B9\u7684\u904D\u5386\u8BBF\u95EE\u51FD\u6570\uFF0C\u5E76\u6309\u8981\u6C42\u8F93\u51FAlog\u3002</h2><blockquote><p>\u793A\u4F8B\uFF1A\u4F7F\u5F97\u4E8C\u53C9\u6811\u5982\u4E0B\u65F6\uFF1A \u8F93\u5165\u6570\u636E\uFF1A[1, [2], [3, [4, [5], [6]], [7]]]</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>   1
  / \\
 2   3
    / \\
   4   7
  / \\
 5   6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>console.log \u8F93\u51FA\u7684\u987A\u5E8F\u4E3A\uFF1A</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>
<span class="token number">5</span>
<span class="token number">6</span>
<span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u6790-\u6B64\u9898\u8003\u67E5-\u5B9E\u73B0\u4E8C\u53C9\u6811-\u548C-\u904D\u5386\u7B97\u6CD5\u3002\u6B64\u5904\u4EE5-\u4E2D\u5E8F\u904D\u5386-\u4E3A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-\u6B64\u9898\u8003\u67E5-\u5B9E\u73B0\u4E8C\u53C9\u6811-\u548C-\u904D\u5386\u7B97\u6CD5\u3002\u6B64\u5904\u4EE5-\u4E2D\u5E8F\u904D\u5386-\u4E3A\u4F8B" aria-hidden="true">#</a> \u89E3\u6790\uFF1A\u6B64\u9898\u8003\u67E5 \u5B9E\u73B0\u4E8C\u53C9\u6811 \u548C \u904D\u5386\u7B97\u6CD5\u3002\u6B64\u5904\u4EE5 <code>\u4E2D\u5E8F\u904D\u5386</code> \u4E3A\u4F8B\uFF1A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">binaryTreeAccess</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E8C\u53C9\u6811</span>
  <span class="token keyword">var</span> binaryTree <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BinaryTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6241\u5E73\u5316\uFF0C\u904D\u5386\u63D2\u5165\u8282\u70B9</span>
  arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    binaryTree<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u904D\u5386\u8BBF\u95EE\u8282\u70B9\uFF0C\u5E76\u6253\u5370</span>
  binaryTree<span class="token punctuation">.</span><span class="token function">inOrderTraverse</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// \u8282\u70B9\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E8C\u53C9\u6811\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">BinaryTree</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u63D2\u5165</span>
  <span class="token function">insert</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> node<span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u904D\u5386</span>
  <span class="token function">inOrderTraverse</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F20 root \u662F\u56E0\u4E3A\u8981\u4ECE\u6839\u8282\u70B9\u5F00\u59CB\u3002</span>
    <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63D2\u5165\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>key <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>left <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>right <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E2D\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">callback</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B;</span>
<span class="token function">binaryTreeAccess</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),P={class:"custom-container tip"},A=n("p",{class:"custom-container-title"},"Author",-1),B=s("\u56DE\u7B54\u8005: "),E={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},I=s("kangyana"),O=p(`<h2 id="_3-\u5B9E\u73B0\u4E00\u4E2A\u5206\u7EC4\u6279\u91CF\u6267\u884C\u7684\u4EFB\u52A1\u8C03\u5EA6\u51FD\u6570-shiptasks" tabindex="-1"><a class="header-anchor" href="#_3-\u5B9E\u73B0\u4E00\u4E2A\u5206\u7EC4\u6279\u91CF\u6267\u884C\u7684\u4EFB\u52A1\u8C03\u5EA6\u51FD\u6570-shiptasks" aria-hidden="true">#</a> 3. \u5B9E\u73B0\u4E00\u4E2A\u5206\u7EC4\u6279\u91CF\u6267\u884C\u7684\u4EFB\u52A1\u8C03\u5EA6\u51FD\u6570 shipTasks</h2><blockquote><p>\u4F7F\u5F97\u4EFB\u52A1\u961F\u5217\u91CC\u9762\u7684N\u6761\u4EFB\u52A1\u4EE5\u6BCF\u7EC4 3 \u6761\u5F02\u6B65\u5E76\u53D1\u6267\u884C\uFF0C\u4EFB\u52A1\u5148\u8FDB\u5148\u51FA\uFF0C\u6BCF\u4E2A\u5206\u7EC4\u4F9D\u6B21\u4E32\u884C\u6267\u884C \u6CE8\u610F\uFF1A\uFF08\u540E\u4E00\u7EC4\u7B49\u524D\u4E00\u7EC4\u5F02\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u4E4B\u540E\u624D\u6267\u884C\uFF09</p></blockquote><h3 id="\u89E3\u6790-\u6B64\u9898\u8003\u67E5-promise-all" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-\u6B64\u9898\u8003\u67E5-promise-all" aria-hidden="true">#</a> \u89E3\u6790\uFF1A\u6B64\u9898\u8003\u67E5 <code>Promise.all</code></h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mockTaskFn</span><span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5047\u8BBE\u8FD9\u91CC\u505A\u4E86\u7F51\u7EDC\u8BF7\u6C42</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> task<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mockTaskPool <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task3&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task4&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task5&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task6&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task7&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task9&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;task10&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">shipTasks</span><span class="token punctuation">(</span><span class="token parameter">tasks<span class="token punctuation">,</span> amount <span class="token operator">=</span> <span class="token number">3</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// step \u4E3A 3</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tasks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>tasks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> amount<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6279\u6B21\u6210\u529F\uFF1A&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>res<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A0\u8F7D\u5931\u8D25\uFF1A&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8F93\u51FA\u4EFB\u52A1mock\u8FD4\u56DE\u503C\u6570\u7EC4</span>
<span class="token keyword">const</span> <span class="token function-variable function">testFn</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">shipTasks</span><span class="token punctuation">(</span>mockTaskPool<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u90E8\u5B8C\u6BD5\uFF1A&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token function">testFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),U={class:"custom-container tip"},F=n("p",{class:"custom-container-title"},"Author",-1),L=s("\u56DE\u7B54\u8005: "),S={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},C=s("kangyana"),R=p(`<h2 id="_4-\u5B9E\u73B0-compareversion-\u65B9\u6CD5-\u7528\u4E8E\u6BD4\u8F83\u4E24\u4E2A\u7248\u672C\u53F7-version1\u3001version2" tabindex="-1"><a class="header-anchor" href="#_4-\u5B9E\u73B0-compareversion-\u65B9\u6CD5-\u7528\u4E8E\u6BD4\u8F83\u4E24\u4E2A\u7248\u672C\u53F7-version1\u3001version2" aria-hidden="true">#</a> 4. \u5B9E\u73B0 compareVersion \u65B9\u6CD5\uFF0C\u7528\u4E8E\u6BD4\u8F83\u4E24\u4E2A\u7248\u672C\u53F7\uFF08version1\u3001version2\uFF09</h2><blockquote><p>\u5982\u679Cversion1 &gt; version2\uFF0C\u8FD4\u56DE1\uFF1B \u5982\u679Cversion1 &lt; version2\uFF0C\u8FD4\u56DE-1\uFF1B \u5176\u4ED6\u60C5\u51B5\uFF0C\u8FD4\u56DE0\u3002 \u7248\u672C\u53F7\u89C4\u5219<code>x.y.z</code>\uFF0Cxyz\u5747\u4E3A\u5927\u4E8E\u7B49\u4E8E0\u7684\u6574\u6570\uFF0C\u81F3\u5C11\u6709x\u4F4D\u3002 \u793A\u4F8B\uFF1AcompareVersion(&#39;0.1&#39;, &#39;1.1.1&#39;); // \u8FD4\u56DE-1 compareVersion(&#39;13.37&#39;, &#39;1.2 &#39;); // \u8FD4\u56DE1 compareVersion(&#39;1.1&#39;, &#39;1.1.0&#39;); // \u8FD4\u56DE0 compareVersion(&#39;1.1&#39;, &#39;1.1.1&#39;); // \u8FD4\u56DE-1</p></blockquote><h3 id="\u89E3\u6790-\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-\u53CC\u6307\u9488" aria-hidden="true">#</a> \u89E3\u6790\uFF1A\u53CC\u6307\u9488</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token parameter">version1<span class="token punctuation">,</span> version2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7248\u672C\u53F7\u8F6C\u4F4D\u6570\u7EC4</span>
  <span class="token keyword">let</span> v1 <span class="token operator">=</span> version1<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> v2 <span class="token operator">=</span> version2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> v1<span class="token punctuation">.</span>length <span class="token operator">||</span> index <span class="token operator">&lt;</span> v2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7248\u672C\u53F7\u957F\u5EA6\u88650</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      v2<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v1<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      v1<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6BD4\u8F83\u7248\u672C\u53F7\u5927\u5C0F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>v1<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token operator">+</span>v2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>v1<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token operator">+</span>v2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.1.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE-1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;13.37&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.2 &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;1.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.1.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;1.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.1.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),z={class:"custom-container tip"},W=n("p",{class:"custom-container-title"},"Author",-1),G=s("\u56DE\u7B54\u8005: "),M={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},Q=s("kangyana"),D=p(`<h2 id="_5-\u4E95\u5B57\u68CB\u6E38\u620F" tabindex="-1"><a class="header-anchor" href="#_5-\u4E95\u5B57\u68CB\u6E38\u620F" aria-hidden="true">#</a> 5. \u4E95\u5B57\u68CB\u6E38\u620F</h2><blockquote><p>\u8F93\u5165\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u4EE3\u8868\u68CB\u76D8\uFF0C\u5176\u4E2D\u300E1\u300F\u4EE3\u8868\u5F53\u524D\u73A9\u5BB6\u7684\u68CB\u5B50\uFF0C\u300E0\u300F\u4EE3\u8868\u6CA1\u6709\u68CB\u5B50\uFF0C\u300E-1\u300F\u4EE3\u8868\u5BF9\u65B9\u73A9\u5BB6\u7684\u68CB\u5B50\u3002 \u82E5\u4E00\u65B9\u68CB\u5B50\u5728\u6A2A\u3001\u7AD6\u3001\u659C\u65B9\u5411\u8FDE\u6210\u6392\u5219\u4E3A\u83B7\u80DC\uFF0C\u8FD4\u56DE\u5F53\u524D\u73A9\u5BB6\u662F\u5426\u80DC\u51FA\u3002 \u793A\u4F8B\uFF1A\u5165\u53C2\u4E3A [[1,0,1],[1,-1,-1],[1,-1,0]] \u65F6\uFF0C\u8FD4\u56DE true</p></blockquote><h3 id="\u89E3\u6790-\u53CC\u5FAA\u73AF\u66B4\u529B\u7834\u89E3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790-\u53CC\u5FAA\u73AF\u66B4\u529B\u7834\u89E3" aria-hidden="true">#</a> \u89E3\u6790\uFF1A\u53CC\u5FAA\u73AF\u66B4\u529B\u7834\u89E3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">gameCheck</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// \u68CB\u76D8\u7684\u957F\u5EA6</span>
  <span class="token keyword">let</span> sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u6A2A\u5411</span>
  <span class="token keyword">let</span> sum2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u7EB5\u5411</span>
  <span class="token keyword">let</span> sum3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u4E3B\u5BF9\u89D2\u7EBF</span>
  <span class="token keyword">let</span> sum4 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u526F\u5BF9\u89D2\u7EBF</span>
  <span class="token comment">// \u4E00\u884C\u4E00\u884C\u753B</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u753B</span>
    sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    sum2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u5BF9\u89D2\u7EBF</span>
    sum3 <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    sum4 <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum1 <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
      sum2 <span class="token operator">+=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8D62\u7684\u6761\u4EF6\uFF08\u4E09\u70B9\u6210\u7EBF\uFF09</span>
    <span class="token keyword">const</span> isWin <span class="token operator">=</span> sum1 <span class="token operator">===</span> len <span class="token operator">||</span> sum2 <span class="token operator">===</span> len <span class="token operator">||</span> sum3 <span class="token operator">===</span> len <span class="token operator">||</span> sum4 <span class="token operator">===</span> len<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isWin<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token function">gameCheck</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function H(J,K){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,n("div",k,[d,n("p",null,[v,n("a",m,[b,t(a)])])]),n("div",h,[y,n("p",null,[f,n("a",g,[_,t(a)])])]),w,n("div",q,[x,n("p",null,[j,n("a",N,[T,t(a)])])]),V,n("div",P,[A,n("p",null,[B,n("a",E,[I,t(a)])])]),O,n("div",U,[F,n("p",null,[L,n("a",S,[C,t(a)])])]),R,n("div",z,[W,n("p",null,[G,n("a",M,[Q,t(a)])])]),D])}const Y=e(i,[["render",H],["__file","143.html.vue"]]);export{Y as default};

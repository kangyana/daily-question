import{_ as e,r as o,o as c,c as p,b as n,d as t,e as s,a as i}from"./app.2a439a8a.js";const l={},u=n("h1",{id:"\u3010q009\u3011js\u4E2Dthis\u662F\u5982\u4F55\u5DE5\u4F5C\u7684",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u3010q009\u3011js\u4E2Dthis\u662F\u5982\u4F55\u5DE5\u4F5C\u7684","aria-hidden":"true"},"#"),s(" \u3010Q009\u3011JS\u4E2Dthis\u662F\u5982\u4F55\u5DE5\u4F5C\u7684")],-1),d={class:"custom-container tip"},r=n("p",{class:"custom-container-title"},"Issue",-1),k=s("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: "),v={href:"https://github.com/kangyana/daily-question/issues/9",target:"_blank",rel:"noopener noreferrer"},h=s("Issue 9"),m={class:"custom-container tip"},b=n("p",{class:"custom-container-title"},"Author",-1),_=s("\u56DE\u7B54\u8005: "),f={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"},g=s("kangyana"),y=i(`<p><strong>this</strong> \u6C38\u8FDC\u6307\u5411\u51FD\u6570\u8FD0\u884C\u65F6\u6240\u5728\u7684\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u51FD\u6570\u88AB\u521B\u5EFA\u65F6\u6240\u5728\u7684\u5BF9\u8C61\u3002</p><h2 id="_1-\u5168\u5C40\u73AF\u5883\u4E2D" tabindex="-1"><a class="header-anchor" href="#_1-\u5168\u5C40\u73AF\u5883\u4E2D" aria-hidden="true">#</a> 1. \u5168\u5C40\u73AF\u5883\u4E2D</h2><p><code>this</code> \u6307\u5411\u5168\u5C40\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u6D4F\u89C8\u5668\u4E2D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u5728 Node \u4E2D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> globalThis<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u51FD\u6570\u5185\u90E8" tabindex="-1"><a class="header-anchor" href="#_2-\u51FD\u6570\u5185\u90E8" aria-hidden="true">#</a> 2. \u51FD\u6570\u5185\u90E8</h2><p><code>this</code> \u7684\u503C\u53D6\u51B3\u4E8E\u51FD\u6570\u88AB\u8C03\u7528\u7684\u65B9\u5F0F\u3002</p><p>\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C<code>this</code> \u7684\u503C\u9ED8\u8BA4\u6307\u5411\u5168\u5C40\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> window<span class="token punctuation">;</span>   <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u5982\u679C\u8FDB\u5165\u6267\u884C\u73AF\u5883\u65F6\u6CA1\u6709\u8BBE\u7F6E <code>this</code> \u7684\u503C\uFF0C<code>this</code> \u4F1A\u4FDD\u6301\u4E3A <code>undefined</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8981\u60F3\u628A <code>this</code> \u7684\u503C\u4ECE\u4E00\u4E2A\u73AF\u5883\u4F20\u5230\u53E6\u4E00\u4E2A\uFF0C\u5C31\u8981\u7528 <code>call</code> \u6216\u8005 <code>apply</code> \u65B9\u6CD5</p><h2 id="_3-\u7C7B\u5185\u90E8" tabindex="-1"><a class="header-anchor" href="#_3-\u7C7B\u5185\u90E8" aria-hidden="true">#</a> 3. \u7C7B\u5185\u90E8</h2><p><code>this</code> \u5728 <code>\u7C7B</code> \u4E2D\u7684\u8868\u73B0\u4E0E\u5728\u51FD\u6570\u4E2D\u7C7B\u4F3C\uFF0C\u56E0\u4E3A\u7C7B\u672C\u8D28\u4E0A\u4E5F\u662F\u51FD\u6570\uFF0C\u4F46\u4E5F\u6709\u4E00\u4E9B\u533A\u522B\u548C\u6CE8\u610F\u4E8B\u9879</p><p>\u5728\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\uFF0Cthis \u662F\u4E00\u4E2A\u5E38\u89C4\u5BF9\u8C61\u3002\u7C7B\u4E2D\u6240\u6709 <strong>\u975E\u9759\u6001\u7684\u65B9\u6CD5</strong> \u90FD\u4F1A\u88AB\u6DFB\u52A0\u5230 <code>this</code> \u7684\u539F\u578B\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">third</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;constructor&#39;, &#39;first&#39;, &#39;second&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u6D3E\u751F\u7C7B\u5185\u90E8" tabindex="-1"><a class="header-anchor" href="#_4-\u6D3E\u751F\u7C7B\u5185\u90E8" aria-hidden="true">#</a> 4. \u6D3E\u751F\u7C7B\u5185\u90E8</h2><p>\u6D3E\u751F\u7C7B\u7684\u6784\u9020\u51FD\u6570\u6CA1\u6709\u521D\u59CB\u7684 <code>this</code> \u7ED1\u5B9A\uFF0C\u5728\u8C03\u7528 super() \u4E4B\u524D\u5F15\u7528 <code>this</code> \u4F1A\u62A5\u9519</p><h2 id="_5-bind-\u540E" tabindex="-1"><a class="header-anchor" href="#_5-bind-\u540E" aria-hidden="true">#</a> 5. bind()\u540E</h2><p><code>this</code> \u7684\u503C\u6307\u5411\u7ED1\u5B9A\u7684\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token string">&quot;azerty&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// azerty</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u7BAD\u5934\u51FD\u6570\u5185\u90E8" tabindex="-1"><a class="header-anchor" href="#_6-\u7BAD\u5934\u51FD\u6570\u5185\u90E8" aria-hidden="true">#</a> 6. \u7BAD\u5934\u51FD\u6570\u5185\u90E8</h2><p><code>this</code> \u7684\u503C\u6307\u5411\u5916\u90E8\u73AF\u5883\uFF0C\u76F8\u5F53\u4E8E\u4F20\u9012\u4E86 <code>this</code></p>`,22);function w(x,j){const a=o("ExternalLinkIcon");return c(),p("div",null,[u,n("div",d,[r,n("p",null,[k,n("a",v,[h,t(a)])])]),n("div",m,[b,n("p",null,[_,n("a",f,[g,t(a)])])]),y])}const N=e(l,[["render",w],["__file","9.html.vue"]]);export{N as default};
